MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;INSTITUTO POLITECNICO NACIONAL
                      00002 ;CECYT 9 JUAN DE DIOS BATIZ
                      00003 ;
                      00004 ;PRACTICA 4 MULTIPLEXADO MODULO ANALÓGICO “DAC CONVERTIDOR DIGITAL ANALOGICO”.  
                      00005 ;(GENERADOR DE SEÑALES BASICAS).
                      00006 ;GRUPO:6IM2
                      00007 ;
                      00008 ;INTEGRANTE
                      00009 ;Morales Martínez José Antonio
                      00010 ;
                      00011 ;El programa ejecutara un generador de señales, con capacidad de mostrar
                      00012 ;una señal triangular, cuadrada, y senoidal cambiando entre ellas por medio de 
                      00013 ;un teclado matricial 4x4 y un LCD para vizualizar la señal que se esta mostrando
                      00014 ;----------------------------------------------------------------------------------------------------
                      00015 
Warning[205]: Found directive in column 1. (LIST)
                      00016 LIST P=16F877A; // Directiva utilizada para definir el microcontrolador a utilizar
                      00017 
                      00018 
                      00019 #INCLUDE "c:\program files (x86)\microchip\mpasm suite\p16f877a.inc"; 
                      00001         LIST
                      00002 ; P16F877A.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00400         LIST
                      00020 
                      00021 
                      00022 ;Bits de configuracion
Warning[205]: Found directive in column 1. (__CONFIG)
2007   3F31           00023 __CONFIG _XT_OSC & _WDT_OFF & _PWRTE_ON & _BODEN_OFF & _LVP_OFF & _CP_OFF; ALL
                      00024 
                      00025 ;------------------------------------------------------------------------------------------------------
                      00026 ;fosc = 4 Mhz.
                      00027 ;Ciclo de trabajo del PIC = (1/fosc)*4 = 1us.
                      00028 ;t int =(256-R)*(P)*((1/4000000)*4) = 1 ms ;// Tiempo de interrupción.
                      00029 ;R=131, p=8.
                      00030 ;frec int = 1/ t int = 1Khz.
                      00031 ;------------------------------------------------------------------------------------------------------
                      00032 ;
                      00033 ;Registros de proposito general Banco 0 de Memoria RAM.
                      00034 ;
                      00035 ;Registros propios de estructura del programa
                      00036 
  00000029            00037 RES_W               EQU                 0X29;   //Registro de resplado de la variable W en la subruitna 
                            de interrupción 
  00000030            00038 RES_STATUS              EQU                     0X30;   //Registro de resplado de la variable status en 
                            la subruitna de interrupción
  00000031            00039 RES_PCLATH              EQU                     0X31;   //Registro de resplado de la variable pclath en 
                            la subruitna de interrupción
  00000032            00040 RES_FSR                 EQU                     0X32;   //Registro de resplado de la variable fsr en la 
                            subruitna de interrupción
  00000033            00041 PRESC_1                 EQU                     0X33;   //T int= T interrupcion(0.001s)*presc_1 multipli
                            ca por un escalar al tiempo de interrupcion base
  00000034            00042 PRESC_2                 EQU                     0X34;   //T int= T interrupcion(0.001s)*presc_1*presc_2 
                            multiplica por un escalar al tiempo de interrupcion base 
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000035            00043 BANDERAS                EQU                     0X35;   //Registro en donde se definen bits banderas (ba
                            ndera_c, bandera_D, bandera_clear)
  00000036            00044 CONT_MILIS              EQU                     0X36;   //Registro que lleva la cuenta de las unidades d
                            e milisegundos (0-255)
  00000037            00045 TEMPO_2                 EQU                     0X37;   //Registro en donde se almacena temporalmente el
                             nibble alto del byte almacenado en la RAM
  00000038            00046 TEMPO_3                 EQU                     0X38;   //Registro en donde se almacena temporalmente el
                             nibble bajo del byte almacenado en la RAM
  00000039            00047 TEMPORAL                EQU                     0X39;   //Registro en donde se almacena la variable para
                             la subrutina de conversión de hexadecimal a ASCII
  00000040            00048 VAR_TECLADO     EQU                     0X40;   //Guardar el codigo de la tecla activa sobre el puerto B
                            .
  00000041            00049 VAR_TECOPRI             EQU                     0X41;   //Regresar el codigo ASCII de la tecla oprimida.
  00000042            00050 VAR_TECBIN              EQU             0X42;   //Guarda el calor de la tecla oprimida en binario.
  00000043            00051 TEMPO_1                 EQU             0X43;   //Registro en donde se almacena temporalmente el byte al
                            macenado en la RAM
  00000044            00052 BUFFER0                 EQU                     0X44;   //Direccion de la memoria RAM para el buffer 0.
  00000045            00053 BUFFER1                 EQU                     0X45;   //Direccion de la memoria RAM para el buffer 1.
  00000046            00054 BUFFER2                 EQU                     0X46;   //Direccion de la memoria RAM para el buffer 2.
  00000047            00055 BUFFER3                 EQU                     0X47;   //Direccion de la memoria RAM para el buffer 3.
  00000048            00056 BUFFER4                 EQU                     0X48;   //Direccion de la memoria RAM para el buffer 4.
  00000049            00057 BUFFER5X                EQU                     0X49;   //Direccion de la memoria RAM para el buffer 5.
  00000075            00058 BUFFER6X                EQU                     0X75;   //Direccion de la memoria RAM para el buffer 6.
  00000050            00059 BUFFER7                 EQU                     0X50;   //Direccion de la memoria RAM para el buffer 7.
  00000051            00060 BUFFER8                 EQU                     0X51;   //Direccion de la memoria RAM para el buffer 8.
  00000052            00061 BUFFER9                 EQU                     0X52;   //Direccion de la memoria RAM para el buffer 9.
  00000053            00062 BUFFERA                 EQU                     0X53;   //Direccion de la memoria RAM para el buffer A.
  00000054            00063 BUFFERB                 EQU                     0X54;   //Direccion de la memoria RAM para el buffer B.
  00000055            00064 BUFFERC                 EQU                     0X55;   //Direccion de la memoria RAM para el buffer C.
  00000056            00065 BUFFERD                 EQU                     0X56;   //Direccion de la memoria RAM para el buffer D.
  00000057            00066 BUFFERE                 EQU                     0X57;   //Direccion de la memoria RAM para el buffer E.
  00000058            00067 BUFFERF                 EQU                     0X58;   //Direccion de la memoria RAM para el buffer F.
  00000059            00068 BUFFER0DO               EQU                     0X59;   //Direccion de la memoria RAM para el buffer 0.
  00000060            00069 BUFFER1DO               EQU                     0X60;   //Direccion de la memoria RAM para el buffer 1.
  00000061            00070 BUFFER2DO               EQU                     0X61;   //Direccion de la memoria RAM para el buffer 2.
  00000062            00071 BUFFER3DO               EQU                     0X62;   //Direccion de la memoria RAM para el buffer 3.
  00000063            00072 BUFFER4DO               EQU                     0X63;   //Direccion de la memoria RAM para el buffer 4.
  00000064            00073 BUFFER5DO               EQU                     0X64;   //Direccion de la memoria RAM para el buffer 5.
  00000065            00074 BUFFER6DO               EQU                     0X65;   //Direccion de la memoria RAM para el buffer 6.
  00000066            00075 BUFFER7DO               EQU                     0X66;   //Direccion de la memoria RAM para el buffer 7.
  00000067            00076 BUFFER8DO               EQU                     0X67;   //Direccion de la memoria RAM para el buffer 8.
  00000068            00077 BUFFER9DO               EQU                     0X68;   //Direccion de la memoria RAM para el buffer 9.
  00000069            00078 BUFFERADO               EQU                     0X69;   //Direccion de la memoria RAM para el buffer A.
  00000070            00079 BUFFERBDO               EQU                     0X70;   //Direccion de la memoria RAM para el buffer B.
  00000071            00080 BUFFERCDO               EQU                     0X71;   //Direccion de la memoria RAM para el buffer C.
  00000072            00081 BUFFERDDO               EQU                     0X72;   //Direccion de la memoria RAM para el buffer D.
  00000073            00082 BUFFEREDO               EQU                     0X73;   //Direccion de la memoria RAM para el buffer E.
  00000074            00083 BUFFERFDO               EQU                     0X74;   //Direccion de la memoria RAM para el buffer F.
  00000076            00084 AUXNIBBLE_BAJO  EQU                     0X76;
  00000077            00085 AUXNIBBLE_ALTO  EQU                     0X77;
  00000078            00086 AUXPORTE                EQU             0X78;
  00000079            00087 REG5S                   EQU             0X79;
                      00088 
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00089 ;-----------------------------------------------------------------------------------------------------
                      00090 ;Constantes
                      00091 
  000000F0            00092 NO_HAYTECLA             EQU             0XF0;   //Esta constante desctiva todos los reglones y no habrá 
                            tecla en la entrada
  000000E0            00093 TEC_1                   EQU                     0XE0;   //Esta costante representa a la tecla "1" 
  000000D0            00094 TEC_2                   EQU                     0XD0;   //Esta costante representa a la tecla "2"
  000000B0            00095 TEC_3                   EQU                     0XB0;   //Esta costante representa a la tecla "3"
  00000070            00096 TEC_A                   EQU                     0X70;   //Esta costante representa a la tecla "A"
  000000E0            00097 TEC_4                   EQU                     0XE0;   //Esta costante representa a la tecla "4"
  000000D0            00098 TEC_5                   EQU                     0XD0;   //Esta costante representa a la tecla "5"
  000000B0            00099 TEC_6                   EQU                     0XB0;   //Esta costante representa a la tecla "6"
  00000070            00100 TEC_B                   EQU                     0X70;   //Esta costante representa a la tecla "B"
  000000E0            00101 TEC_7                   EQU                     0XE0;   //Esta costante representa a la tecla "7"
  000000D0            00102 TEC_8                   EQU                     0XD0;   //Esta costante representa a la tecla "8"
  000000B0            00103 TEC_9                   EQU                     0XB0;   //Esta costante representa a la tecla "9"
  00000070            00104 TEC_C                   EQU                     0X70;   //Esta costante representa a la tecla "C"
  000000E0            00105 TEC_CLEAR               EQU                     0XE0;   //Esta costante representa a la tecla "*"
  000000D0            00106 TEC_0                   EQU                     0XD0;   //Esta costante representa a la tecla "0"
  000000B0            00107 TEC_GATO                EQU                     0XB0;   //Esta costante representa a la tecla "#"
  00000070            00108 TEC_D                   EQU                     0X70;   //Esta costante representa a la tecla "D"
                      00109 
                      00110 ;-----------------------------------------------------------------------------------------------------
                      00111 
                      00112 ; banderas del registro banderas.
  00000000            00113 BAN_INT                 EQU     .0;     //Bit bandera de retardo 1s
  00000001            00114 BANDERA_D               EQU     .1; //Bit bandera de salida de la subrutina configtime
  00000002            00115 BANDERA_TECLADO         EQU     .2; //Bit bandera de combrobacion de la variable introducida mediante te
                            clado
  00000003            00116 BANDERA_CLEAR               EQU     .3; //Bit bandera de * para borrar LCD
  00000004            00117 SIN_BD4                 EQU     .4; //Sin Uso bd4.
  00000005            00118 SIN_BD5                 EQU     .5;     //Sin Uso bd5. 
  00000006            00119 SIN_BD6                 EQU     .6; //Sin Uso bd6.
  00000007            00120 SIN_BD7                 EQU     .7; //Sin Uso bd7.
                      00121 ;-----------------------------------------------------------------------------------------------------
                      00122 ;Asignacion de los bits de los puertos de I/O.
                      00123 ;Puerto A.
  00000000            00124 ENABLE_LCD              EQU                     .0; // Señal de control de Comando o dato en la LCD
  00000001            00125 RS_LCD                  EQU                     .1; // Señal de ingreso de información a la LCD
  00000002            00126 WE_RAM                  EQU                     .2; // Señal de WR en la memoria RAM
  00000003            00127 RD_RAM                  EQU                     .3; // Señal de RD en la memoria RAM
  00000004            00128 LED_ROJO                EQU                     .4; // Monitor del sistema
  00000005            00129 CE_RAM                  EQU                     .5; // Descativación/activación de la RAM.
                      00130 
  00000000            00131 PROGA                   EQU     B'000000'; // Programacion Inicial del Puerto A.
                      00132 
                      00133 ;Puerto B.
  00000000            00134 ACT_REN1                EQU             .0; // Pin de salida para activar el reglon de 1 del teclado.
  00000001            00135 ACT_REN2                EQU             .1; // Pin de salida para activar el reglon de 2 del teclado.
  00000002            00136 ACT_REN3                EQU             .2; // Pin de salida para activar el reglon de 3 del teclado.
  00000003            00137 ACT_REN4                EQU             .3; // Pin de salida para activar el reglon de 4 del teclado.
  00000004            00138 COL_1                   EQU             .4; // Pin de entrada para leer el codigo de la tecla oprimida.
  00000005            00139 COL_2                   EQU             .5; // Pin de entrada para leer el codigo de la tecla oprimida.
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000006            00140 COL_3                   EQU             .6; // Pin de entrada para leer el codigo de la tecla oprimida.
  00000007            00141 COL_4                   EQU             .7; // Pin de entrada para leer el codigo de la tecla oprimida.
                      00142                 
  000000F0            00143 PROGB                   EQU     B'11110000'; // Programacion Inicial del Puerto B.
                      00144 
                      00145 ;Puerto C.
  00000000            00146 DATA_BUSD0                      EQU                     .0; // Bit de Entrada/Salida del bus de datos.
  00000001            00147 DATA_BUSD1                      EQU                     .1; // Bit de Entrada/Salida del bus de datos.
  00000002            00148 DATA_BUSD2                      EQU                     .2; // Bit de Entrada/Salida del bus de datos.
  00000003            00149 DATA_BUSD3                      EQU                     .3; // Bit de Entrada/Salida del bus de datos.
  00000004            00150 DATA_BUSD4                      EQU                     .4; // Bit de Entrada/Salida del bus de datos.
  00000005            00151 DATA_BUSD5                      EQU                     .5; // Bit de Entrada/Salida del bus de datos.
  00000006            00152 DATA_BUSD6                      EQU                     .6; // Bit de Entrada/Salida del bus de datos.
  00000007            00153 DATA_BUSD7                      EQU                     .7; // Bit de Entrada/Salida del bus de datos.
                      00154 
  000000FF            00155 PROGC_IN                        EQU     B'11111111'; // Programacion Inicial del Puerto C como Entradas.
  00000000            00156 PROGC_OUT                       EQU     B'00000000'; // Programacion Inicial del Puerto C como Salidas.
                      00157 
                      00158 ;Puerto D.
  00000000            00159 BUS_DIRA0               EQU                     .0; // Bit 0 de salida A0 de direcciones;
  00000001            00160 BUS_DIRA1               EQU                     .1; // Bit 1 de salida A1 de direcciones;
  00000002            00161 BUS_DIRA2               EQU                     .2; // Bit 2 de salida A2 de direcciones;
  00000003            00162 BUS_DIRA3               EQU                     .3; // Bit 3 de salida A3 de direcciones;
  00000004            00163 BUS_DIRA4               EQU                     .4; // Bit 4 de salida A4 de direcciones;
  00000005            00164 BUS_DIRA5               EQU                     .5; // Bit 5 de salida A5 de direcciones;
  00000006            00165 BUS_DIRA6               EQU                     .6; // Bit 6 de salida A6 de direcciones;
  00000007            00166 BUS_DIRA7               EQU                     .7; // Bit 7 de salida A7 de direcciones;
                      00167 
  00000000            00168 PROGD                   EQU     B'00000000'; // Programacion Inicial del Puerto D como salidas.
                      00169 
                      00170 ;Puerto E.
  00000000            00171 BUS_DIRA10              EQU                     .0; // Bit 10 de salida A10 de direcciones;
  00000001            00172 BUS_DIRA9               EQU                     .1; // Bit 9 de salida A9 de direcciones;
  00000002            00173 BUS_DIRA8               EQU                     .2; // Bit 8 de salida A8 de direcciones;
                      00174 
  00000000            00175 PROGE                   EQU     B'000'; // Programacion inicial del Puerto E como salidas.
                      00176 ;-------------------------------------------------------------------------------------------------------
                            --
                      00177                                                 ;================
                      00178                                                 ;==Vector Reset==
                      00179                                                 ;================
0000                  00180                                 ORG 0X0000;                             // dirección de inicio de la mem
                            oria donde el IDE comenzara a ensamblar
0000   018A           00181 VEC_RESET               CLRF PCLATH;                    // Limpia el registro PCLATH
0001   2868           00182                                 GOTO PROG_PRIN;                 // ve para la etiqueta prog_ini
                      00183 ;-------------------------------------------------------------------------------------------------------
                            --
                      00184                         ;=============================
                      00185                         ;== Subrutina de Interrupciones  ==
                      00186                         ;=============================
0004                  00187                  ORG 0004H;                     //direccion de memoria donde se encuentra la subrtuina d
                            e servicio de interrupcion  
0004   00A9           00188 VEC_INT                  MOVWF RES_W;                   //Respaldar el estado del registro w
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005   0803           00189                  MOVF STATUS,W;                 //Mover el contenido del registro status a el registro d
                            e trabajo
0006   00B0           00190                  MOVWF RES_STATUS;              //Respaldar las banderas de la alu
0007   0183           00191                  CLRF STATUS;                   //Limpia el registro STATUS
0008   080A           00192                  MOVF PCLATH,W;                 //Mover el contenido del registro res_pclath a el regist
                            ro de trabajo
0009   00B1           00193                  MOVWF RES_PCLATH;              //Respaldar el estado del registro pclath               
000A   018A           00194                  CLRF PCLATH;                   //Limpia el registro pclath
000B   0804           00195                  MOVF FSR,W;                    //Mover el contenido del registro res_fsr a el registro 
                            de trabajo
000C   00B2           00196                  MOVWF RES_FSR;                 //Respaldar el estado del registro fsr  
                      00197                          
000D   190B           00198                  BTFSC INTCON,T0IF;             //Si el bit t0if del registro intcon es igual a 0 salta
000E   2019           00199                  CALL RUTINA_INT;               //LLamada a la subrutina de interrupciones
                      00200                         
000F   3083           00201 SAL_INT                  MOVLW .131;                    //Mover la constante 131 al registro de trabajo
0010   0081           00202                  MOVWF TMR0;                    //Mover el contenido del registro de trabajo al registro
                             tmr0
0011   0832           00203                  MOVF RES_FSR,W;                //Mover el contenido del respaldo res_fsr a el registro 
                            de trabajo
0012   0084           00204                  MOVWF FSR;                             //Mover el contenido del registro de trabajo al 
                            registro far
0013   0831           00205                  MOVF RES_PCLATH,W;             //Mover el contenido del respaldo res_pclath a el regist
                            ro de trabajo
0014   008A           00206                  MOVWF PCLATH;                  //Mover el contenido del registro de trabajo al registro
                             pclath
0015   0830           00207                  MOVF RES_STATUS,W;             //Mover el contenido del respaldo res_status a el regist
                            ro de trabajo
0016   0083           00208                  MOVWF STATUS;                  //Mover el contenido del registro de trabajo al registro
                             status
0017   0829           00209                  MOVF RES_W,W;                  //Mover el contenido del respaldo res_w a el registro de
                             trabajo
                      00210                         
0018   0009           00211                  RETFIE;                                //Regresar al programa principal
                      00212 ;--------------------------------------------------------------------------------------------------
                      00213 
                      00214 
                      00215                         ;=============================
                      00216                         ;== Subrutina de Interrupciones  ==
                      00217                         ;=============================
0019   0AB6           00218 RUTINA_INT      INCF CONT_MILIS,F;              //Incrementa la variable cont milis en una unidad y guar
                            da en el mismo registro
001A   0AB3           00219                 INCF PRESC_1,F;                 //Incrementa la variable presc 1 en una unidad y guarda 
                            en el mismo registro
                      00220                         
001B   3064           00221                 MOVLW .100;                             //Mover la constante 100 al registro de trabajo
001C   0633           00222                 XORWF PRESC_1,W;                //XOR entre registro presc 1 y el registro de trabajo
001D   1903           00223                 BTFSC STATUS,Z;                 //Si el bit z del registro status es igual a 0 salta
001E   2820           00224                 GOTO SIG_INT;                   //Ve para la etiqueta sig_int
001F   2829           00225                 GOTO SAL_RUTINT;                //Ve para la etiqueta sal_rutint
                      00226 
0020   01B3           00227 SIG_INT                 CLRF PRESC_1;                   //Limpia el registro presc 1
0021   0AB4           00228                 INCF PRESC_2,F;                 //Incrementa la variable presc 2 y guarda en el mismo re
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            gistro
0022   300A           00229                 MOVLW .10;                              //Mover la constante 10 al registro de trabajo
0023   0634           00230                 XORWF PRESC_2,W;                //XOR entre registro presc 2 y el registro de trabajo
0024   1D03           00231                 BTFSS STATUS,Z;                 //Si el bit z del registro status es igual a 1 salta
0025   2829           00232                 GOTO SAL_RUTINT;                //Ve para la etiqueta sal_rutint
0026   01B3           00233                 CLRF PRESC_1;                   //Limpia el registro presc 1
0027   01B4           00234                 CLRF PRESC_2;                   //Limpia el registro presc 2
                      00235                         
0028   1435           00236 SAL_RUTEXT      BSF BANDERAS,BAN_INT;   //Pon a 1 el bit ban int del registro banderas(retardo 1s)
                      00237                                  
0029   110B           00238 SAL_RUTINT      BCF INTCON,T0IF;                //Pon a 0 el bit bandera t0if puesto a 1 por la interrup
                            cion
002A   0008           00239                 RETURN;                                 //Regresar al programa principal
                      00240 ;-------------------------------------------------------------------------------------------------------
                            --      
                      00241 
                      00242 
                      00243                                 ;=======================
                      00244                                 ;==Subrutina de inicio==
                      00245                                 ;=======================
002B   1683           00246 PROG_INI                BSF STATUS,RP0;                 //Coloca al programa  en el bco. 1 de ram
002C   3002           00247                                 MOVLW 0X02;                             // Mueve la constante 0X02 al re
                            gistro w
002D   0081           00248                                 MOVWF OPTION_REG ^0X80; // Configura el preescalador y activa los pull-u
                            p
002E   3000           00249                                 MOVLW PROGA;                    // Mueve el contenido de w a el registro
                             proga
002F   0085           00250                                 MOVWF TRISA ^0X80;              // Mueve la constante 0X80 al registro T
                            RISA
0030   30F0           00251                                 MOVLW PROGB;                    // Mueve el contenido de w a el registro
                             progb
0031   0086           00252                                 MOVWF TRISB ^0X80;              // Mueve la constante 0X80 al registro T
                            RISB
0032   3000           00253                                 MOVLW PROGC_OUT;                        // Mueve el contenido de w a el 
                            registro progc
0033   0087           00254                                 MOVWF TRISC ^0X80;              // Mueve la constante 0X80 al registro T
                            RISC
0034   3000           00255                                 MOVLW PROGD;                    // Mueve el contenido de w a el registro
                             progd
0035   0088           00256                                 MOVWF TRISD ^0X80;              // Mueve la constante 0X80 al registro T
                            RISD
0036   3000           00257                                 MOVLW PROGE;                    // Mueve el contenido de w a el registro
                             proge
0037   0089           00258                                 MOVWF TRISE ^0X80;              // Mueve la constante 0X80 al registro T
                            RISE
0038   3006           00259                                 MOVLW 0X06;                             // Mueve la constante 0X06 al re
                            gistro w
0039   009F           00260                                 MOVWF ADCON1 ^0X80;             // Mueve la constante 0X80 al registro A
                            DCON1
003A   1283           00261                                 BCF     STATUS,RP0;                     //regresa al bco. 0 de ram
                      00262                         
003B   30A0           00263                 MOVLW 0XA0;                             // Habilita la interrupcion del TMR0, Las global
                            es y borra las banderas de interrupción 
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003C   008B           00264                 MOVWF INTCON;                   //Mover el contenido del registro de trabajo al registro
                             intcon
003D   3083           00265                 MOVLW .131;                             //Mover la constante 131 al registro de trabajo
003E   0081           00266                 MOVWF TMR0;                             //Carga a tmr0 la constante 131 desde donde inic
                            iará la cuenta
                      00267 
003F   0187           00268                                 CLRF PORTC;                             //Limpia el registro portc
0040   3003           00269                                 MOVLW 0X03;                             //Inicializa el pin Enable y RS 
                            a 1 logico
0041   0085           00270                                 MOVWF PORTA;                    //Mover el contenido del registro de tra
                            bajo al registro porta
                      00271                                 
0042   0186           00272                                 CLRF PORTB;
0043   303F           00273                                 MOVLW 0X3F;
0044   0085           00274                                 MOVWF PORTA;
0045   0189           00275                                 CLRF PORTE;
0046   0188           00276                                 CLRF PORTD;
                      00277 
0047   01C4           00278                                 CLRF BUFFER0;                   //Limpia el buffer0 encargado del dígito
                             0 del LCD
0048   01C5           00279                                 CLRF BUFFER1;                   //Limpia el buffer1 encargado del dígito
                             1 del LCD
0049   01C6           00280                                 CLRF BUFFER2;                   //Limpia el buffer2 encargado del dígito
                             2 del LCD
004A   01C7           00281                                 CLRF BUFFER3;                   //Limpia el buffer3 encargado del dígito
                             3 del LCD
004B   01C8           00282                                 CLRF BUFFER4;                   //Limpia el buffer4 encargado del dígito
                             4 del LCD
004C   01C9           00283                                 CLRF BUFFER5X;                  //Limpia el buffer5 encargado del dígito
                             5 del LCD
004D   01F5           00284                                 CLRF BUFFER6X;                  //Limpia el buffer6 encargado del dígito
                             6 del LCD
004E   01D0           00285                                 CLRF BUFFER7;                   //Limpia el buffer7 encargado del dígito
                             7 del LCD
004F   01D1           00286                                 CLRF BUFFER8;                   //Limpia el buffer8 encargado del dígito
                             8 del LCD
0050   01D2           00287                                 CLRF BUFFER9;                   //Limpia el buffer9 encargado del dígito
                             9 del LCD
0051   01D3           00288                                 CLRF BUFFERA;                   //Limpia el bufferA encargado del dígito
                             A del LCD
0052   01D4           00289                                 CLRF BUFFERB;                   //Limpia el bufferB encargado del dígito
                             B del LCD
0053   01D5           00290                                 CLRF BUFFERC;                   //Limpia el bufferC encargado del dígito
                             C del LCD
0054   01D6           00291                                 CLRF BUFFERD;                   //Limpia el bufferD encargado del dígito
                             D del LCD
0055   01D7           00292                                 CLRF BUFFERE;                   //Limpia el bufferE encargado del dígito
                             E del LCD
0056   01D9           00293                                 CLRF BUFFER0DO;                 //Limpia el buffer0 encargado del dígito
                             0 del LCD
0057   01E0           00294                                 CLRF BUFFER1DO;                 //Limpia el buffer1 encargado del dígito
                             1 del LCD
0058   01E1           00295                                 CLRF BUFFER2DO;                 //Limpia el buffer2 encargado del dígito
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             2 del LCD
0059   01E2           00296                                 CLRF BUFFER3DO;                 //Limpia el buffer3 encargado del dígito
                             3 del LCD
005A   01E3           00297                                 CLRF BUFFER4DO;                 //Limpia el buffer4 encargado del dígito
                             4 del LCD
005B   01E4           00298                                 CLRF BUFFER5DO;                 //Limpia el buffer5 encargado del dígito
                             5 del LCD
005C   01E5           00299                                 CLRF BUFFER6DO;                 //Limpia el buffer6 encargado del dígito
                             6 del LCD
005D   01E6           00300                                 CLRF BUFFER7DO;                 //Limpia el buffer7 encargado del dígito
                             7 del LCD
005E   01E7           00301                                 CLRF BUFFER8DO;                 //Limpia el buffer8 encargado del dígito
                             8 del LCD
005F   01E8           00302                                 CLRF BUFFER9DO;                 //Limpia el buffer9 encargado del dígito
                             9 del LCD
0060   01E9           00303                                 CLRF BUFFERADO;                 //Limpia el bufferA encargado del dígito
                             A del LCD
0061   01F0           00304                                 CLRF BUFFERBDO;                 //Limpia el bufferB encargado del dígito
                             B del LCD
0062   01F1           00305                                 CLRF BUFFERCDO;                 //Limpia el bufferC encargado del dígito
                             C del LCD
0063   01F2           00306                                 CLRF BUFFERDDO;                 //Limpia el bufferD encargado del dígito
                             D del LCD
0064   01F3           00307                                 CLRF BUFFEREDO;                 //Limpia el bufferE encargado del dígito
                             E del LCD
0065   01F4           00308                                 CLRF BUFFERFDO;                 //Limpia el bufferE encargado del dígito
                             E del LCD
0066   01F9           00309                                 CLRF REG5S;
                      00310 
                      00311 
0067   0008           00312                                 RETURN;                                 //Regresa de la subrutina de ini
                            cializacion
                      00313 ;-------------------------------------------------------------------------------------------------------
                            ---------
                      00314 
                      00315                                 ;======================
                      00316                                 ;==Programa Principal==
                      00317                                 ;======================
0068   202B           00318 PROG_PRIN       CALL PROG_INI;                  //Llamada a la subrutina de inicio              
0069   2317           00319                         CALL INI_LCD;                   //Llama a la subrutina de inicializacion del LCD
                      00320         
006A   3000           00321 FUE_TEC3AUX     MOVLW 0X00;                             //Deja en blanco el espacio para el
006B   00C4           00322                         MOVWF BUFFER0;                  //digito 0
006C   00D0           00323                         MOVWF BUFFER7;                  //digito 8
006D   00D3           00324                         MOVWF BUFFERA;                  //digito 11
006E   00D7           00325                         MOVWF BUFFERE;                  //digito 15
006F   00D8           00326                         MOVWF BUFFERF;                  //digito 16     
0070   00D9           00327                         MOVWF BUFFER0DO;                //digito 1 2do reglón
0071   00E0           00328                         MOVWF BUFFER1DO;                //digito 2 2do reglón
0072   00E8           00329                         MOVWF BUFFER9DO;                //digito 10 2do reglón
0073   00F2           00330                         MOVWF BUFFERDDO;                //digito 14 2do reglón
0074   00F3           00331                         MOVWF BUFFEREDO;                //digito 15 2do reglón
0075   00F4           00332                         MOVWF BUFFERFDO;                //digito 16 2do reglón
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0076   304D           00333                         MOVLW 'M';                              //Carga al buffer 1 con el caracter M
0077   00C5           00334                         MOVWF BUFFER1;                  //en ASCII para ser mostrado en el LCD 
0078   3041           00335                         MOVLW 'A';                              //Carga al buffer 2 con el caracter A
0079   00C6           00336                         MOVWF BUFFER2;                  //en ASCII para ser mostrado en el LCD 
007A   304E           00337                         MOVLW 'N';                              //Carga al buffer 3 con el caracter N
007B   00C7           00338                         MOVWF BUFFER3;                  //en ASCII para ser mostrado en el LCD 
007C   3045           00339                         MOVLW 'E';                              //Carga al buffer 4 con el caracter E
007D   00C8           00340                         MOVWF BUFFER4;                  //en ASCII para ser mostrado en el LCD 
007E   304A           00341                         MOVLW 'J';                              //Carga al buffer 4 con el caracter E
007F   00C9           00342                         MOVWF BUFFER5X;                 //en ASCII para ser mostrado en el LCD 
0080   304F           00343                         MOVLW 'O';                              //Carga al buffer 6 con el caracter O
0081   00F5           00344                         MOVWF BUFFER6X;                 //en ASCII para ser mostrado en el LCD 
0082   3044           00345                         MOVLW 'D';                              //Carga al buffer 8 con el caracter D
0083   00D1           00346                         MOVWF BUFFER8;                  //en ASCII para ser mostrado en el LCD 
0084   3045           00347                         MOVLW 'E';                              //Carga al buffer 9 con el caracter E
0085   00D2           00348                         MOVWF BUFFER9;                  //en ASCII para ser mostrado en el LCD 
0086   3055           00349                         MOVLW 'U';                              //Carga al buffer A con el caracter U
0087   00D4           00350                         MOVWF BUFFERB;                  //en ASCII para ser mostrado en el LCD 
0088   304E           00351                         MOVLW 'N';                              //Carga al buffer C con el caracter N
0089   00D5           00352                         MOVWF BUFFERC;                  //en ASCII para ser mostrado en el LCD 
008A   3041           00353                         MOVLW 'A';                              //Carga al buffer D con el caracter A
008B   00D6           00354                         MOVWF BUFFERD;                  //en ASCII para ser mostrado en el LCD 
008C   304D           00355                         MOVLW 'M';                              //Carga al buffer 2 con el caracter M
008D   00E1           00356                         MOVWF BUFFER2DO;                //en ASCII para ser mostrado en el LCD 
008E   3045           00357                         MOVLW 'E';                              //Carga al buffer 3 con el caracter E
008F   00E2           00358                         MOVWF BUFFER3DO;                //en ASCII para ser mostrado en el LCD 
0090   304D           00359                         MOVLW 'M';                              //Carga al buffer 4 con el caracter M
0091   00E3           00360                         MOVWF BUFFER4DO;                //en ASCII para ser mostrado en el LCD 
0092   304F           00361                         MOVLW 'O' ;                             //Carga al buffer 5 con el caracter O
0093   00E4           00362                         MOVWF BUFFER5DO;                //en ASCII para ser mostrado en el LCD 
0094   3052           00363                         MOVLW 'R' ;                             //Carga al buffer 6 con el caracter R
0095   00E5           00364                         MOVWF BUFFER6DO;                //en ASCII para ser mostrado en el LCD
0096   3049           00365                         MOVLW 'I' ;                             //Carga al buffer 7 con el caracter I
0097   00E6           00366                         MOVWF BUFFER7DO;                //en ASCII para ser mostrado en el LCD  
0098   3041           00367                         MOVLW 'A' ;                             //Carga al buffer 8 con el caracter A
0099   00E7           00368                         MOVWF BUFFER8DO;                //en ASCII para ser mostrado en el LCD
009A   3052           00369                         MOVLW 'R' ;                             //Carga al buffer 1A con el caracter R
009B   00E9           00370                         MOVWF BUFFERADO;                //en ASCII para ser mostrado en el LCD 
009C   3041           00371                         MOVLW 'A' ;                             //Carga al buffer 1B con el caracter A
009D   00F0           00372                         MOVWF BUFFERBDO;                //en ASCII para ser mostrado en el LCD 
009E   304D           00373                         MOVLW 'M' ;                             //Carga al buffer 1C con el caracter M
009F   00F1           00374                         MOVWF BUFFERCDO;                //en ASCII para ser mostrado en el LCD 
00A0   2397           00375                         CALL MUESTRA_CARACTER;
                      00376 
                      00377 ;-------------------------------------------------------------------------------------------------------
                            ---------
00A1                  00378 RENGLON_3A                      
00A1   1486           00379                         BSF PORTB,ACT_REN2;     //Desactiva el reglon 2 del teclado matricial
00A2   0000           00380                         NOP;                                    //No operacion,para activar/desactivar d
                            os bits consecutivamnete se requiere un nop entre ellos
00A3   1106           00381                         BCF     PORTB,ACT_REN3;         //Activa reglon 3 del teclado matricial
00A4   0806           00382                         MOVF PORTB,W;                   //Mueve el contenido del puerto B a el registro 
                            W
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A5   00C0           00383                         MOVWF VAR_TECLADO;              //Mueve el contenido a la variable teclado
00A6   30F0           00384                         MOVLW 0XF0;                             //Enmascaramiento
00A7   05C0           00385                         ANDWF VAR_TECLADO,F;    //Enmascaramiento
00A8   30F0           00386                         MOVLW NO_HAYTECLA;              //mueve la variable no hay tecla a W
00A9   0240           00387                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - Ni hay tecla(F0), almacena
                             en W
00AA   1903           00388                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
00AB   28A1           00389                         GOTO RENGLON_3A;                        //Ve a barrer el reglon 2
00AC                  00390 SWITCH          
00AC   30E0           00391                         MOVLW TEC_1;                    //Mueve la constante tecla 1 a W
00AD   0240           00392                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - tecla 1, almacena en W
00AE   1903           00393                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
00AF   28B8           00394                         GOTO FUE_TEC1AUX;                       //Ve aconvertir a ASCII la tecla 1
                      00395                 
00B0   30D0           00396                         MOVLW TEC_2;                    //Mueve la constante tecla 2 a W
00B1   0240           00397                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - tecla 2, almacena en W
00B2   1903           00398                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
00B3   2974           00399                         GOTO FUE_TEC2AUX;                       //Ve aconvertir a ASCII la tecla 2
                      00400 
00B4   30B0           00401                         MOVLW TEC_3;                    //Mueve la constante tecla 3 a W
00B5   0240           00402                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - tecla 3, almacena en W
00B6   1903           00403                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
00B7   286A           00404                         GOTO FUE_TEC3AUX;                       //Ve aconvertir a ASCII la tecla 3
                      00405 ;-------------------------------------------------------------------------------------------------------
                            ---------
                      00406 
                      00407 ;-------------------------------------------------------------------------------------------------------
                            ---------
00B8                  00408 FUE_TEC1AUX
                      00409 
00B8   3000           00410                         MOVLW 0X00;                             //Deja en blanco el espacio para el
00B9   00C4           00411                         MOVWF BUFFER0;                  //digito 1
00BA   00C5           00412                         MOVWF BUFFER1;                  //digito 2
00BB   00C6           00413                         MOVWF BUFFER2;                  //digito 3
00BC   00C7           00414                         MOVWF BUFFER3;                  //digito 4
00BD   00D4           00415                         MOVWF BUFFERB;                  //digito 12     
00BE   00D5           00416                         MOVWF BUFFERC;                  //digito 13
00BF   00D6           00417                         MOVWF BUFFERD;                  //digito 14
00C0   00D7           00418                         MOVWF BUFFERE;                  //digito 15
00C1   00D8           00419                         MOVWF BUFFERF;                  //digito 16
00C2   00D9           00420                         MOVWF BUFFER0DO;                //digito 1 2do reglón
00C3   00F0           00421                         MOVWF BUFFERBDO;                //digito 12 2do reglón
00C4   00F1           00422                         MOVWF BUFFERCDO;                //digito 13 2do reglón
00C5   00F2           00423                         MOVWF BUFFERDDO;                //digito 14 2do reglón
00C6   00F3           00424                         MOVWF BUFFEREDO;                //digito 15 2do reglón
00C7   00F4           00425                         MOVWF BUFFERFDO;                //digito 16 2do reglón
00C8   304C           00426                         MOVLW 'L';                              //Carga al buffer 4 con el caracter L
00C9   00C8           00427                         MOVWF BUFFER4;                  //en ASCII para ser mostrado en el LCD 
00CA   3045           00428                         MOVLW 'E';                              //Carga al buffer 5 con el caracter E
00CB   00C9           00429                         MOVWF BUFFER5X;                 //en ASCII para ser mostrado en el LCD 
00CC   3043           00430                         MOVLW 'C';                              //Carga al buffer 6 con el caracter C
00CD   00F5           00431                         MOVWF BUFFER6X;                 //en ASCII para ser mostrado en el LCD 
00CE   3054           00432                         MOVLW 'T';                              //Carga al buffer 7 con el caracter T
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CF   00D0           00433                         MOVWF BUFFER7;                  //en ASCII para ser mostrado en el LCD 
00D0   3055           00434                         MOVLW 'U';                              //Carga al buffer 8 con el caracter U
00D1   00D1           00435                         MOVWF BUFFER8;                  //en ASCII para ser mostrado en el LCD 
00D2   3052           00436                         MOVLW 'R';                              //Carga al buffer 9 con el caracter R
00D3   00D2           00437                         MOVWF BUFFER9;                  //en ASCII para ser mostrado en el LCD 
00D4   3041           00438                         MOVLW 'A';                              //Carga al buffer A con el caracter A
00D5   00D3           00439                         MOVWF BUFFERA;                  //en ASCII para ser mostrado en el LCD 
                      00440                         
00D6   3044           00441                         MOVLW 'D';                              //Carga al buffer 1  con el caracter D
00D7   00E0           00442                         MOVWF BUFFER1DO;                //en ASCII para ser mostrado en el LCD 
00D8   3049           00443                         MOVLW 'I';                              //Carga al buffer 2 con el caracter I
00D9   00E1           00444                         MOVWF BUFFER2DO;                //en ASCII para ser mostrado en el LCD 
00DA   3052           00445                         MOVLW 'R';                              //Carga al buffer 3 con el caracter R
00DB   00E2           00446                         MOVWF BUFFER3DO;                //en ASCII para ser mostrado en el LCD 
00DC   3045           00447                         MOVLW 'E';                              //Carga al buffer 4 con el caracter E
00DD   00E3           00448                         MOVWF BUFFER4DO;                //en ASCII para ser mostrado en el LCD 
00DE   3043           00449                         MOVLW 'C';                              //Carga al buffer 4 con el caracter C
00DF   00E4           00450                         MOVWF BUFFER5DO;                //en ASCII para ser mostrado en el LCD 
00E0   3043           00451                         MOVLW 'C';                              //Carga al buffer 6 con el caracter C
00E1   00E5           00452                         MOVWF BUFFER6DO;                //en ASCII para ser mostrado en el LCD 
00E2   3049           00453                         MOVLW 'I';                              //Carga al buffer 7 con el caracter I
00E3   00E6           00454                         MOVWF BUFFER7DO;                //en ASCII para ser mostrado en el LCD 
00E4   304F           00455                         MOVLW 'O';                              //Carga al buffer 8 con el caracter O
00E5   00E7           00456                         MOVWF BUFFER8DO;                //en ASCII para ser mostrado en el LCD 
00E6   304E           00457                         MOVLW 'N';                              //Carga al buffer 9 con el caracter N
00E7   00E8           00458                         MOVWF BUFFER9DO;                //en ASCII para ser mostrado en el LCD 
00E8   303A           00459                         MOVLW ':';                              //Carga al buffer A con el caracter :
00E9   00E9           00460                         MOVWF BUFFERADO;                //en ASCII para ser mostrado en el LCD 
00EA   2397           00461                         CALL MUESTRA_CARACTER
                      00462 ;-------------------------------------------------------------------------------------------------------
                            ---------
                      00463 
                      00464 
00EB   1085           00465                         BCF PORTA, RS_LCD;              //Coloca la LCD en formato comandos
00EC   30CC           00466                         MOVLW 0XCC;                     
00ED   0087           00467                         MOVWF PORTC;
00EE   2499           00468                         CALL PULSO_ENABLE;
00EF   1485           00469                         BSF PORTA, RS_LCD;              //Coloca la LCD en modo datos
                      00470 
00F0   2278           00471                         CALL BARRE_TECLADO;
00F1   0841           00472                         MOVF VAR_TECOPRI,W;
00F2   00F8           00473                         MOVWF AUXPORTE;
00F3   00B9           00474                         MOVWF TEMPORAL;
00F4   2326           00475                         CALL CONVHEX_ASCII;
00F5   0839           00476                         MOVF TEMPORAL,W;
00F6   0087           00477                         MOVWF PORTC;
00F7   2499           00478                         CALL PULSO_ENABLE;
00F8   24B0           00479                         CALL RETARDO_250MS;
                      00480 
00F9   1085           00481                         BCF PORTA, RS_LCD;              //Coloca la LCD en formato comandos
00FA   30CD           00482                         MOVLW 0XCD;                     
00FB   0087           00483                         MOVWF PORTC;
00FC   2499           00484                         CALL PULSO_ENABLE;
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00FD   1485           00485                         BSF PORTA, RS_LCD;              //Coloca la LCD en modo datos
                      00486 
00FE   2278           00487                         CALL BARRE_TECLADO;
00FF   0841           00488                         MOVF VAR_TECOPRI,W;
0100   00F7           00489                         MOVWF AUXNIBBLE_ALTO;
0101   00B9           00490                         MOVWF TEMPORAL;
0102   2326           00491                         CALL CONVHEX_ASCII;
0103   0839           00492                         MOVF TEMPORAL,W;
0104   0087           00493                         MOVWF PORTC;
0105   2499           00494                         CALL PULSO_ENABLE;
0106   24B0           00495                         CALL RETARDO_250MS;
                      00496 
0107   1085           00497                         BCF PORTA, RS_LCD;              //Coloca la LCD en formato comandos
0108   30CE           00498                         MOVLW 0XCE;                     
0109   0087           00499                         MOVWF PORTC;
010A   2499           00500                         CALL PULSO_ENABLE;
010B   1485           00501                         BSF PORTA, RS_LCD;              //Coloca la LCD en modo datos
                      00502 
010C   2278           00503                         CALL BARRE_TECLADO;
010D   0841           00504                         MOVF VAR_TECOPRI,W;
010E   00F6           00505                         MOVWF AUXNIBBLE_BAJO;
010F   00B9           00506                         MOVWF TEMPORAL;
0110   2326           00507                         CALL CONVHEX_ASCII;
0111   0839           00508                         MOVF TEMPORAL,W;
0112   0087           00509                         MOVWF PORTC;
0113   2499           00510                         CALL PULSO_ENABLE;
0114   24B0           00511                         CALL RETARDO_250MS;
                      00512 
                      00513 
0115   1683           00514                         BSF STATUS,RP0;                 //Selecciona el banco 0 de memoria RAM
0116   30FF           00515                         MOVLW PROGC_IN;                 //Configura el puerto c
0117   0087           00516                         MOVWF TRISC ^0X80;              //como entradas         .
0118   1283           00517                         BCF STATUS,RP0;                 //Regresa al banco 0 para interactuar con los re
                            gistro que hay ahí
                      00518                         
0119   0E77           00519                         SWAPF AUXNIBBLE_ALTO,W;
011A   0776           00520                         ADDWF AUXNIBBLE_BAJO,W;
011B   0088           00521                         MOVWF PORTD;
011C   0878           00522                         MOVF AUXPORTE,W;
011D   0089           00523                         MOVWF PORTE;
                      00524 ;-------------------------------------------------------------------------------------------------------
                            ---------
                      00525                 
011E   1285           00526                         BCF PORTA,CE_RAM;               //Activa el bus de datos de la RAM
011F   0000           00527                         NOP;                                    //Desfasamiento         
0120   0000           00528                         NOP;                                    // de la señal 
0121   0000           00529                         NOP;                                    //4 ms
0122   0000           00530                         NOP;
0123   1185           00531                         BCF PORTA,RD_RAM;               //Activa la escritura de la RAM
0124   249E           00532                         CALL RETARDO_1MS;               //Retardo de 1ms para para el pulso de lectura
0125   0807           00533                         MOVF PORTC,W;                   //Respalda el dato a leer de la RAM             
0126   00C3           00534                         MOVWF TEMPO_1;                  //a un registro auxiliar para poder trabajar con
                             el en el PIC16F877A
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0127   1585           00535                         BSF PORTA,RD_RAM;               //Desactiva la escritura de la RAM
0128   0000           00536                         NOP;                                    //Desfasamiento         
0129   0000           00537                         NOP;                                    //de la señal 
012A   0000           00538                         NOP;                                    //3 ms
012B   1685           00539                         BSF PORTA,CE_RAM;               //Desactiva el bus de datos de la RAM
                      00540 
012C   1683           00541                         BSF STATUS,RP0;                 //Selecciona el banco 0 de memoria RAM
012D   3000           00542                         MOVLW PROGC_OUT;                //Configura el puerto c
012E   0087           00543                         MOVWF TRISC ^0X80;              //como salidas.
012F   1283           00544                         BCF STATUS,RP0;                 //Regresa al banco 0 para interactuar con los re
                            gistro que hay ahí
                      00545         
0130   1085           00546                         BCF PORTA, RS_LCD;              //Coloca la LCD en formato comandos
0131   3001           00547                         MOVLW 0X01;                             
0132   0087           00548                         MOVWF PORTC;
0133   2499           00549                         CALL PULSO_ENABLE;
0134   1485           00550                         BSF PORTA, RS_LCD;              //Coloca la LCD en modo datos
                      00551 
0135   1085           00552                         BCF PORTA, RS_LCD;              //Coloca la LCD en formato comandos
0136   30C4           00553                         MOVLW 0XC4;                             
0137   0087           00554                         MOVWF PORTC;
0138   2499           00555                         CALL PULSO_ENABLE;
0139   1485           00556                         BSF PORTA, RS_LCD;              //Coloca la LCD en modo datos
                      00557 
013A   0843           00558                         MOVF TEMPO_1,W;
013B   00B7           00559                         MOVWF TEMPO_2;
013C   00B8           00560                         MOVWF TEMPO_3;
                      00561 
013D   3044           00562                         MOVLW 'D';
013E   0087           00563                         MOVWF PORTC;
013F   2499           00564                         CALL PULSO_ENABLE;
0140   24A4           00565                         CALL RETARDO_40MS;
                      00566 
0141   3041           00567                         MOVLW 'A';
0142   0087           00568                         MOVWF PORTC;
0143   2499           00569                         CALL PULSO_ENABLE;
0144   24A4           00570                         CALL RETARDO_40MS;
                      00571                 
0145   3054           00572                         MOVLW 'T';
0146   0087           00573                         MOVWF PORTC;
0147   2499           00574                         CALL PULSO_ENABLE;
0148   24A4           00575                         CALL RETARDO_40MS;
                      00576 
0149   304F           00577                         MOVLW 'O';
014A   0087           00578                         MOVWF PORTC;
014B   2499           00579                         CALL PULSO_ENABLE;
014C   24A4           00580                         CALL RETARDO_40MS;
                      00581 
014D   303A           00582                         MOVLW ':';
014E   0087           00583                         MOVWF PORTC;
014F   2499           00584                         CALL PULSO_ENABLE;
0150   24A4           00585                         CALL RETARDO_40MS;
                      00586 
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0151   30F0           00587                         MOVLW 0XF0;
0152   05B7           00588                         ANDWF TEMPO_2,F;
0153   0EB7           00589                         SWAPF TEMPO_2,F;
0154   0837           00590                         MOVF TEMPO_2,W;
0155   00B9           00591                         MOVWF TEMPORAL;
0156   2326           00592                         CALL CONVHEX_ASCII;
0157   0839           00593                         MOVF TEMPORAL,W;
0158   0087           00594                         MOVWF PORTC;
0159   2499           00595                         CALL PULSO_ENABLE;
015A   24A4           00596                         CALL RETARDO_40MS;
                      00597 
015B   300F           00598                         MOVLW 0X0F;
015C   05B8           00599                         ANDWF TEMPO_3,F;
015D   0838           00600                         MOVF TEMPO_3,W;
015E   00B9           00601                         MOVWF TEMPORAL;
015F   2326           00602                         CALL CONVHEX_ASCII;
0160   0839           00603                         MOVF TEMPORAL,W;
0161   0087           00604                         MOVWF PORTC;
0162   2499           00605                         CALL PULSO_ENABLE;
0163   24A4           00606                         CALL RETARDO_40MS;
                      00607 
0164   3048           00608                         MOVLW 'H';
0165   0087           00609                         MOVWF PORTC;
0166   2499           00610                         CALL PULSO_ENABLE;
0167   24A4           00611                         CALL RETARDO_40MS;
                      00612 
0168   1486           00613 LOOP_1ERA       BSF PORTB,ACT_REN2;     //Desactiva el reglon 2 del teclado matricial
0169   0000           00614                         NOP;                                    //No operacion,para activar/desactivar d
                            os bits consecutivamnete se requiere un nop entre ellos
016A   1106           00615                         BCF     PORTB,ACT_REN3;         //Activa reglon 3 del teclado matricial
016B   0806           00616                         MOVF PORTB,W;                   //Mueve el contenido del puerto B a el registro 
                            W
016C   00C0           00617                         MOVWF VAR_TECLADO;              //Mueve el contenido a la variable teclado
016D   30F0           00618                         MOVLW 0XF0;                             //Enmascaramiento
016E   05C0           00619                         ANDWF VAR_TECLADO,F;    //Enmascaramiento
016F   30F0           00620                         MOVLW NO_HAYTECLA;              //mueve la variable no hay tecla a W
0170   0240           00621                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - Ni hay tecla(F0), almacena
                             en W
0171   1D03           00622                         BTFSS STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
0172   28AC           00623                         GOTO SWITCH;                    //Ve a barrer el reglon 2
0173   2968           00624                         GOTO LOOP_1ERA;
                      00625 
                      00626 ;-------------------------------------------------------------------------------------------------------
                            ---------
                      00627 
                      00628 
0174                  00629 FUE_TEC2AUX
                      00630 
                      00631 ;-------------------------------------------------------------------------------------------------------
                            ---------
                      00632 
0174   3000           00633                         MOVLW 0X00;                             //Deja en blanco el espacio para el
0175   00C4           00634                         MOVWF BUFFER0;                  //digito 1
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0176   00C5           00635                         MOVWF BUFFER1;                  //digito 2
0177   00C6           00636                         MOVWF BUFFER2;                  //digito 3      
0178   00D5           00637                         MOVWF BUFFERC;                  //digito 13
0179   00D6           00638                         MOVWF BUFFERD;                  //digito 14
017A   00D7           00639                         MOVWF BUFFERE;                  //digito 15
017B   00D8           00640                         MOVWF BUFFERF;                  //digito 16
017C   00D9           00641                         MOVWF BUFFER0DO;                //digito 1 2do reglón
017D   00E4           00642                         MOVWF BUFFER5DO;                //digito 6 2do reglón
017E   00E5           00643                         MOVWF BUFFER6DO;                //digito 7 2do reglón
017F   00E6           00644                         MOVWF BUFFER7DO;                //digito 8 2do reglón
0180   00E7           00645                         MOVWF BUFFER8DO;                //digito 9 2do reglón
0181   00F0           00646                         MOVWF BUFFERBDO;                //digito 12 2do reglón
0182   00F1           00647                         MOVWF BUFFERCDO;                //digito 13 2do reglón
0183   00F2           00648                         MOVWF BUFFERDDO;                //digito 14 2do reglón
0184   00F3           00649                         MOVWF BUFFEREDO;                //digito 15 2do reglón
0185   00F4           00650                         MOVWF BUFFERFDO;                //digito 16 2do reglón
                      00651                         
0186   3045           00652                         MOVLW 'E';                              //Envía el caracter E
0187   00C7           00653                         MOVWF BUFFER3;                  //en ASCII para ser mostrado en el LCD 
0188   3053           00654                         MOVLW 'S';                              //Envía el caracter S
0189   00C8           00655                         MOVWF BUFFER4;                  //en ASCII para ser mostrado en el LCD 
018A   3043           00656                         MOVLW 'C';                              //Envía el caracter C
018B   00C9           00657                         MOVWF BUFFER5X;                 //en ASCII para ser mostrado en el LCD.
018C   3052           00658                         MOVLW 'R';                              //Envía el caracter R
018D   00F5           00659                         MOVWF BUFFER6X;                 //en ASCII para ser mostrado en el LCD.
018E   3049           00660                         MOVLW 'I';                              //Envía el caracter I
018F   00D0           00661                         MOVWF BUFFER7;                  //en ASCII para ser mostrado en el LCD.
0190   3054           00662                         MOVLW 'T';                              //Envía el caracter T
0191   00D1           00663                         MOVWF BUFFER8;                  //en ASCII para ser mostrado en el LCD.
0192   3055           00664                         MOVLW 'U';                              //Envía el caracter U
0193   00D2           00665                         MOVWF BUFFER9;                  //en ASCII para ser mostrado en el LCD.
0194   3052           00666                         MOVLW 'R';                              //Envía el caracter R
0195   00D3           00667                         MOVWF BUFFERA;                  //en ASCII para ser mostrado en el LCD.
0196   3041           00668                         MOVLW 'A';                              //Envía el caracter A
0197   00D4           00669                         MOVWF BUFFERB;                  //en ASCII para ser mostrado en el LCD.
                      00670                 
0198   3044           00671                         MOVLW 'D';                              //Envía el caracter D
0199   00E0           00672                         MOVWF BUFFER1DO;                //en ASCII para ser mostrado en el LCD.
019A   3049           00673                         MOVLW 'I';                              //Envía el caracter I
019B   00E1           00674                         MOVWF BUFFER2DO;                //en ASCII para ser mostrado en el LCD.
019C   3052           00675                         MOVLW 'R';                              //Envía el caracter R
019D   00E2           00676                         MOVWF BUFFER3DO;                //en ASCII para ser mostrado en el LCD.
019E   303A           00677                         MOVLW ':';                              //Envía el caracter :
019F   00E3           00678                         MOVWF BUFFER4DO;                //en ASCII para ser mostrado en el LCD.
                      00679 
01A0   3044           00680                         MOVLW 'D';                              //Envía el caracter D
01A1   00E8           00681                         MOVWF BUFFER9DO;                //en ASCII para ser mostrado en el LCD.
01A2   3041           00682                         MOVLW 'A';                              //Envía el caracter A
01A3   00E9           00683                         MOVWF BUFFERADO;                //en ASCII para ser mostrado en el LCD.
01A4   3054           00684                         MOVLW 'T';                              //Envía el caracter T
01A5   00F0           00685                         MOVWF BUFFERBDO;                //en ASCII para ser mostrado en el LCD.
01A6   304F           00686                         MOVLW 'O';                              //Envía el caracter O
01A7   00F1           00687                         MOVWF BUFFERCDO;                //en ASCII para ser mostrado en el LCD. 
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A8   303A           00688                         MOVLW ':';                              //Envía el caracter :
01A9   00F2           00689                         MOVWF BUFFERDDO;                //en ASCII para ser mostrado en el LCD.
01AA   2397           00690                         CALL MUESTRA_CARACTER
                      00691 
                      00692 ;-------------------------------------------------------------------------------------------------------
                            ---------
                      00693 
                      00694 
01AB   1085           00695                         BCF PORTA, RS_LCD;              //Coloca la LCD en formato comandos
01AC   30C5           00696                         MOVLW 0XC5;                     
01AD   0087           00697                         MOVWF PORTC;
01AE   2499           00698                         CALL PULSO_ENABLE;
01AF   1485           00699                         BSF PORTA, RS_LCD;              //Coloca la LCD en modo datos
                      00700 
01B0   2278           00701                         CALL BARRE_TECLADO;
01B1   0841           00702                         MOVF VAR_TECOPRI,W;
01B2   00F8           00703                         MOVWF AUXPORTE;
01B3   00B9           00704                         MOVWF TEMPORAL;
01B4   2326           00705                         CALL CONVHEX_ASCII;
01B5   0839           00706                         MOVF TEMPORAL,W;
01B6   0087           00707                         MOVWF PORTC;
01B7   2499           00708                         CALL PULSO_ENABLE;
01B8   24B0           00709                         CALL RETARDO_250MS;
                      00710 
01B9   1085           00711                         BCF PORTA, RS_LCD;              //Coloca la LCD en formato comandos
01BA   30C6           00712                         MOVLW 0XC6;                     
01BB   0087           00713                         MOVWF PORTC;
01BC   2499           00714                         CALL PULSO_ENABLE;
01BD   1485           00715                         BSF PORTA, RS_LCD;              //Coloca la LCD en modo datos
                      00716 
01BE   2278           00717                         CALL BARRE_TECLADO;
01BF   0841           00718                         MOVF VAR_TECOPRI,W;
01C0   00F7           00719                         MOVWF AUXNIBBLE_ALTO;
01C1   00B9           00720                         MOVWF TEMPORAL;
01C2   2326           00721                         CALL CONVHEX_ASCII;
01C3   0839           00722                         MOVF TEMPORAL,W;
01C4   0087           00723                         MOVWF PORTC;
01C5   2499           00724                         CALL PULSO_ENABLE;
01C6   24B0           00725                         CALL RETARDO_250MS;
                      00726 
01C7   1085           00727                         BCF PORTA, RS_LCD;              //Coloca la LCD en formato comandos
01C8   30C7           00728                         MOVLW 0XC7;                     
01C9   0087           00729                         MOVWF PORTC;
01CA   2499           00730                         CALL PULSO_ENABLE;
01CB   1485           00731                         BSF PORTA, RS_LCD;              //Coloca la LCD en modo datos
                      00732 
01CC   2278           00733                         CALL BARRE_TECLADO;
01CD   0841           00734                         MOVF VAR_TECOPRI,W;
01CE   00F6           00735                         MOVWF AUXNIBBLE_BAJO;
01CF   00B9           00736                         MOVWF TEMPORAL;
01D0   2326           00737                         CALL CONVHEX_ASCII;
01D1   0839           00738                         MOVF TEMPORAL,W;
01D2   0087           00739                         MOVWF PORTC;
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D3   2499           00740                         CALL PULSO_ENABLE;
01D4   24B0           00741                         CALL RETARDO_250MS;
                      00742 
01D5   0E77           00743                         SWAPF AUXNIBBLE_ALTO,W;
01D6   0776           00744                         ADDWF AUXNIBBLE_BAJO,W;
01D7   0088           00745                         MOVWF PORTD;
01D8   0878           00746                         MOVF AUXPORTE,W;
01D9   0089           00747                         MOVWF PORTE;
                      00748 
01DA   1683           00749                         BSF STATUS,RP0;                 //Selecciona el banco 0 de memoria RAM
01DB   3000           00750                         MOVLW PROGC_OUT;                //Configura el puerto c
01DC   0087           00751                         MOVWF TRISC ^0X80;              //como salidas  .
01DD   1283           00752                         BCF STATUS,RP0;                 //Regresa al banco 0 para interactuar con los re
                            gistro que hay ahí
                      00753 ;-------------------------------------------------------------------------------------------------------
                            ---------
01DE   1085           00754                         BCF PORTA, RS_LCD;              //Coloca la LCD en formato comandos
01DF   30CE           00755                         MOVLW 0XCE;                     
01E0   0087           00756                         MOVWF PORTC;
01E1   2499           00757                         CALL PULSO_ENABLE;
01E2   1485           00758                         BSF PORTA, RS_LCD;              //Coloca la LCD en modo datos
                      00759 
01E3   2278           00760                         CALL BARRE_TECLADO;
01E4   0841           00761                         MOVF VAR_TECOPRI,W;
01E5   00F7           00762                         MOVWF AUXNIBBLE_ALTO;
01E6   00B9           00763                         MOVWF TEMPORAL;
01E7   2326           00764                         CALL CONVHEX_ASCII;
01E8   0839           00765                         MOVF TEMPORAL,W;
01E9   0087           00766                         MOVWF PORTC;
01EA   2499           00767                         CALL PULSO_ENABLE;
01EB   24B0           00768                         CALL RETARDO_250MS;
                      00769 
01EC   1085           00770                         BCF PORTA, RS_LCD;              //Coloca la LCD en formato comandos
01ED   30CF           00771                         MOVLW 0XCF;                     
01EE   0087           00772                         MOVWF PORTC;
01EF   2499           00773                         CALL PULSO_ENABLE;
01F0   1485           00774                         BSF PORTA, RS_LCD;              //Coloca la LCD en modo datos
                      00775 
01F1   2278           00776                         CALL BARRE_TECLADO;
01F2   0841           00777                         MOVF VAR_TECOPRI,W;
01F3   00F6           00778                         MOVWF AUXNIBBLE_BAJO;
01F4   00B9           00779                         MOVWF TEMPORAL;
01F5   2326           00780                         CALL CONVHEX_ASCII;
01F6   0839           00781                         MOVF TEMPORAL,W;
01F7   0087           00782                         MOVWF PORTC;
01F8   2499           00783                         CALL PULSO_ENABLE;
01F9   24B0           00784                         CALL RETARDO_250MS;
                      00785 
01FA   0E77           00786                         SWAPF AUXNIBBLE_ALTO,W;
01FB   0776           00787                         ADDWF AUXNIBBLE_BAJO,W;
01FC   0087           00788                         MOVWF PORTC;
                      00789 
01FD   1285           00790                         BCF PORTA,CE_RAM;               //Activa el bus de datos de la RAM llevando a ba
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            ja impedancia
01FE   0000           00791                         NOP;                                    //Desfasamiento         
01FF   0000           00792                         NOP;                                    //de la señal 
0200   0000           00793                         NOP;                                    //4 ms
0201   0000           00794                         NOP;
0202   1105           00795                         BCF PORTA,WE_RAM;               //Activa la escritura de la RAM
0203   249E           00796                         CALL RETARDO_1MS;               //Retardo de 1ms para el pulso de escritura
0204   1505           00797                         BSF PORTA,WE_RAM;               //Desactiva la escritura de la RAM
0205   0000           00798                         NOP;                                    //Desfasamiento         
0206   0000           00799                         NOP;                                    //de la señal 
0207   0000           00800                         NOP;                                    //3 ms
0208   1685           00801                         BSF PORTA, CE_RAM;              //Desactiva el bus de datos de la RAM 
                      00802                         
                      00803 
                      00804 
0209   1486           00805 LOOP_2DA        BSF PORTB,ACT_REN2;     //Desactiva el reglon 2 del teclado matricial
020A   0000           00806                         NOP;                                    //No operacion,para activar/desactivar d
                            os bits consecutivamnete se requiere un nop entre ellos
020B   1106           00807                         BCF     PORTB,ACT_REN3;         //Activa reglon 3 del teclado matricial
020C   0806           00808                         MOVF PORTB,W;                   //Mueve el contenido del puerto B a el registro 
                            W
020D   00C0           00809                         MOVWF VAR_TECLADO;              //Mueve el contenido a la variable teclado
020E   30F0           00810                         MOVLW 0XF0;                             //Enmascaramiento
020F   05C0           00811                         ANDWF VAR_TECLADO,F;    //Enmascaramiento
0210   30F0           00812                         MOVLW NO_HAYTECLA;              //mueve la variable no hay tecla a W
0211   0240           00813                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - Ni hay tecla(F0), almacena
                             en W
0212   1D03           00814                         BTFSS STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
0213   28AC           00815                         GOTO SWITCH;                    //Ve a barrer el reglon 3 del teclado matricial
0214   2A09           00816                         GOTO LOOP_2DA;
                      00817 
                      00818 
                      00819 
                      00820 
                      00821 
                      00822 
                      00823 
                      00824 
                      00825 
                      00826 
                      00827 
                      00828 
                      00829 
                      00830 
                      00831 
                      00832 
                      00833 ;-------------------------------------------------------------------------------------------------------
                            ---
0215   3002           00834                         MOVLW 0X02;                             //Coloca el byte alto en el bus de direc
                            ciones
0216   0089           00835                         MOVWF PORTE;                    //especificado como 2 
0217   3035           00836                         MOVLW 0X35;                             //Seleccciona
0218   0088           00837                         MOVWF PORTD;                    //la direccion 35 de memoria RAM
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00838 
0219   1683           00839                         BSF STATUS,RP0;                 //Selecciona el banco 0 de memoria RAM
021A   3000           00840                         MOVLW PROGC_OUT;                //Configura el puerto c
021B   00C7           00841                         MOVWF TRISC ^0XC0;              //como salidas.
021C   1283           00842                         BCF STATUS,RP0;                 //Regresa al banco 0 para interactuar con los re
                            gistro que hay ahí
                      00843 
021D   304B           00844                         MOVLW 0X4B ;                    //Coloca el cracter 4B en hexadecimal
021E   0087           00845                         MOVWF PORTC;                    //en el bus de datos de la RAM
                      00846 
                      00847 
021F   1285           00848                         BCF PORTA,CE_RAM;               //Activa el bus de datos de la RAM llevando a ba
                            ja impedancia
0220   0000           00849                         NOP;                                    //Desfasamiento         
0221   0000           00850                         NOP;                                    //de la señal 
0222   0000           00851                         NOP;                                    //4 ms
0223   0000           00852                         NOP;
0224   1105           00853                         BCF PORTA,WE_RAM;               //Activa la escritura de la RAM
0225   249E           00854                         CALL RETARDO_1MS;               //Retardo de 1ms para el pulso de escritura
0226   1505           00855                         BSF PORTA,WE_RAM;               //Desactiva la escritura de la RAM
0227   0000           00856                         NOP;                                    //Desfasamiento         
0228   0000           00857                         NOP;                                    //de la señal 
0229   0000           00858                         NOP;                                    //3 ms
022A   1685           00859                         BSF PORTA, CE_RAM;              //Desactiva el bus de datos de la RAM 
                      00860                         
022B   1683           00861                         BSF STATUS,RP0;                 //Selecciona el banco 0 de memoria RAM
022C   30FF           00862                         MOVLW PROGC_IN;                 //Configura el puerto c
022D   0087           00863                         MOVWF TRISC ^0X80;              //como entradas         .
022E   1283           00864                         BCF STATUS,RP0;                 //Regresa al banco 0 para interactuar con los re
                            gistro que hay ahí
                      00865 ;-------------------------------------------------------------------------------------------------------
                            ---
                      00866 
022F   3002           00867                         MOVLW 0X02;                             //Coloca el byte alto en el bus de direc
                            ciones
0230   0089           00868                         MOVWF PORTE;                    //especificado como 2 
0231   3035           00869                         MOVLW 0X35;                             //Seleccciona
0232   0088           00870                         MOVWF PORTD;                    //la direccion 35 de memoria RAM
                      00871 
0233   1285           00872                         BCF PORTA,CE_RAM;               //Activa el bus de datos de la RAM
0234   0000           00873                         NOP;                                    //Desfasamiento         
0235   0000           00874                         NOP;                                    // de la señal 
0236   0000           00875                         NOP;                                    //4 ms
0237   0000           00876                         NOP;
0238   1185           00877                         BCF PORTA,RD_RAM;               //Activa la escritura de la RAM
0239   249E           00878                         CALL RETARDO_1MS;               //Retardo de 1ms para para el pulso de lectura
023A   0807           00879                         MOVF PORTC,W;                   //Respalda el dato a leer de la RAM             
023B   00C3           00880                         MOVWF TEMPO_1;                  //a un registro auxiliar para poder trabajar con
                             el en el PIC16F877A
023C   1585           00881                         BSF PORTA,RD_RAM;               //Desactiva la escritura de la RAM
023D   0000           00882                         NOP;                                    //Desfasamiento         
023E   0000           00883                         NOP;                                    //de la señal 
023F   0000           00884                         NOP;                                    //3 ms
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0240   1685           00885                         BSF PORTA,CE_RAM;               //Desactiva el bus de datos de la RAM
                      00886 
0241   1683           00887                         BSF STATUS,RP0;                 //Selecciona el banco 0 de memoria RAM
0242   3000           00888                         MOVLW PROGC_OUT;                //Configura el puerto c
0243   0087           00889                         MOVWF TRISC ^0X80;              //como salidas.
0244   1283           00890                         BCF STATUS,RP0;                 //Regresa al banco 0 para interactuar con los re
                            gistro que hay ahí
                      00891 
0245   1085           00892                         BCF PORTA, RS_LCD;              //Coloca la LCD en formato comandos
0246   30C5           00893                         MOVLW 0XC5;                             
0247   0087           00894                         MOVWF PORTC;
0248   2499           00895                         CALL PULSO_ENABLE;
0249   1485           00896                         BSF PORTA, RS_LCD;              //Coloca la LCD en modo datos
                      00897 
024A   0843           00898                         MOVF TEMPO_1,W;
024B   00B7           00899                         MOVWF TEMPO_2;
024C   00B8           00900                         MOVWF TEMPO_3;
                      00901 
024D   3044           00902                         MOVLW 'D';
024E   0087           00903                         MOVWF PORTC;
024F   2499           00904                         CALL PULSO_ENABLE;
0250   24A4           00905                         CALL RETARDO_40MS;
                      00906 
0251   3041           00907                         MOVLW 'A';
0252   0087           00908                         MOVWF PORTC;
0253   2499           00909                         CALL PULSO_ENABLE;
0254   24A4           00910                         CALL RETARDO_40MS;
                      00911                 
0255   3054           00912                         MOVLW 'T';
0256   0087           00913                         MOVWF PORTC;
0257   2499           00914                         CALL PULSO_ENABLE;
0258   24A4           00915                         CALL RETARDO_40MS;
                      00916 
0259   304F           00917                         MOVLW 'O';
025A   0087           00918                         MOVWF PORTC;
025B   2499           00919                         CALL PULSO_ENABLE;
025C   24A4           00920                         CALL RETARDO_40MS;
                      00921 
025D   303A           00922                         MOVLW ':';
025E   0087           00923                         MOVWF PORTC;
025F   2499           00924                         CALL PULSO_ENABLE;
0260   24A4           00925                         CALL RETARDO_40MS;
                      00926 
0261   30F0           00927                         MOVLW 0XF0;
0262   05B7           00928                         ANDWF TEMPO_2,F;
0263   0EB7           00929                         SWAPF TEMPO_2,F;
0264   0837           00930                         MOVF TEMPO_2,W;
0265   00B9           00931                         MOVWF TEMPORAL;
0266   2326           00932                         CALL CONVHEX_ASCII;
0267   0839           00933                         MOVF TEMPORAL,W;
0268   0087           00934                         MOVWF PORTC;
0269   2499           00935                         CALL PULSO_ENABLE;
026A   24A4           00936                         CALL RETARDO_40MS;
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00937 
026B   300F           00938                         MOVLW 0X0F;
026C   05B8           00939                         ANDWF TEMPO_3,F;
026D   0838           00940                         MOVF TEMPO_3,W;
026E   00B9           00941                         MOVWF TEMPORAL;
026F   2326           00942                         CALL CONVHEX_ASCII;
0270   0839           00943                         MOVF TEMPORAL,W;
0271   0087           00944                         MOVWF PORTC;
0272   2499           00945                         CALL PULSO_ENABLE;
0273   24A4           00946                         CALL RETARDO_40MS;
                      00947 
0274   3048           00948                         MOVLW 'H';
0275   0087           00949                         MOVWF PORTC;
0276   2499           00950                         CALL PULSO_ENABLE;
0277   24A4           00951                         CALL RETARDO_40MS;
                      00952 
                      00953 
                      00954 
                      00955 
                      00956 
                      00957 
                      00958 
                      00959 
                      00960 
                      00961 
                      00962 
                      00963 ;-------------------------------------------------------------------------------------------------------
                            ---
                      00964 
                      00965         ;================================================
                      00966         ;   ==Subrutina de Barrre teclado================
                      00967         ;================================================
                      00968 
0278                  00969 BARRE_TECLADO
                      00970                         
0278   1586           00971                         BSF PORTB,ACT_REN4;     //Desactiva el reglon 4 del teclado matricial
0279   0000           00972                         NOP;                                    //No operacion,para activar/desactivar d
                            os bits consecutivamnete se requiere un nop entre ellos
027A   1006           00973                         BCF     PORTB,ACT_REN1;         //Activa reglon 1 del teclado matricial
027B   0806           00974                         MOVF PORTB,W;                   //Mueve el contenido del puerto B a el registro 
                            W
027C   00C0           00975                         MOVWF VAR_TECLADO;              //Mueve el contenido a la variable teclado
027D   30F0           00976                         MOVLW 0XF0;                             //Enmascaramiento
027E   05C0           00977                         ANDWF VAR_TECLADO,F;    //Enmascaramiento
027F   30F0           00978                         MOVLW NO_HAYTECLA;              //Mueve la variable no hay tecla a W
0280   0240           00979                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - Ni hay tecla(F0), almacena
                             en W
0281   1903           00980                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
0282   2A93           00981                         GOTO RENGLON_2;                 //Ve a barrer el reglon 2
                      00982                 
0283   30E0           00983                         MOVLW TEC_7;                    //Mueve la constante tecla 7 a W
0284   0240           00984                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - Tec_7, almacena en W
0285   1903           00985                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0286   2AFB           00986                         GOTO FUE_TEC7;                  //Ve aconvertir a ASCII la tecla 7
                      00987                 
0287   30D0           00988                         MOVLW TEC_8;                    //Mueve la constante tecla 8 a W
0288   0240           00989                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - Tec_8 , almacena en W
0289   1903           00990                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
028A   2AFE           00991                         GOTO FUE_TEC8;                  //Ve aconvertir a ASCII la tecla 8
                      00992 
028B   30B0           00993                         MOVLW TEC_9;                    //Mueve la constante tecla 9 a W
028C   0240           00994                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - Tec_9, almacena en W
028D   1903           00995                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
028E   2B01           00996                         GOTO FUE_TEC9;                  //Ve aconvertir a ASCII la tecla 9
                      00997 
028F   3070           00998                         MOVLW TEC_A;                    //Mueve la constante tecla A a W
0290   0240           00999                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - Tec_A, almacena en W
0291   1903           01000                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
0292   2B04           01001                         GOTO FUE_TECA;                  //Ve aconvertir a ASCII la tecla 9
                      01002                         
                      01003 
                      01004 ;-------------------------------------------------------------------------------------------------------
                            ---
0293                  01005 RENGLON_2               
0293   1406           01006                         BSF PORTB,ACT_REN1;     //Desactiva el reglon 1 del teclado matricial
0294   0000           01007                         NOP;                                    //No operacion,para activar/desactivar d
                            os bits consecutivamnete se requiere un nop entre ellos
0295   1086           01008                         BCF     PORTB,ACT_REN2;         //Activa reglon 2 del teclado matricial
0296   0806           01009                         MOVF PORTB,W;                   //Mueve el contenido del puerto B a el registro 
                            W
0297   00C0           01010                         MOVWF VAR_TECLADO;              //Mueve el contenido a la variable teclado
0298   30F0           01011                         MOVLW 0XF0;                             //Enmascaramiento
0299   05C0           01012                         ANDWF VAR_TECLADO,F;    //Enmascaramiento
029A   30F0           01013                         MOVLW NO_HAYTECLA;              //mueve la variable no hay tecla a W
029B   0240           01014                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - No hay tecla(F0), almacena
                             en W
029C   1903           01015                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
029D   2AAE           01016                         GOTO RENGLON_3;                 //Ve a barrer el reglon 3
                      01017                 
029E   30E0           01018                         MOVLW TEC_4;                    //Mueve la constante tecla 4 a W
029F   0240           01019                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - Tec_4, almacena en W
02A0   1903           01020                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02A1   2AF2           01021                         GOTO FUE_TEC4;                  //Ve aconvertir a ASCII la tecla 4
                      01022                 
02A2   30D0           01023                         MOVLW TEC_5;                    //Mueve la constante tecla 5 a W
02A3   0240           01024                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - tecla 5, almacena en W
02A4   1903           01025                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02A5   2AF5           01026                         GOTO FUE_TEC5;                  //Ve aconvertir a ASCII la tecla 5
                      01027 
02A6   30B0           01028                         MOVLW TEC_6;                    //Mueve la constante tecla 6 a W
02A7   0240           01029                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - tecla 6, almacena en W
02A8   1903           01030                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02A9   2AF8           01031                         GOTO FUE_TEC6;                  //Ve aconvertir a ASCII la tecla 6
                      01032 
02AA   3070           01033                         MOVLW TEC_B;                    //Mueve la constante tecla B a W
02AB   0240           01034                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - tecla B, almacena en W
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02AC   1903           01035                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02AD   2B07           01036                         GOTO FUE_TECB;                  //Ve aconvertir a ASCII la tecla B
                      01037 
                      01038                         
                      01039 ;-------------------------------------------------------------------------------------------------------
                            ---
02AE                  01040 RENGLON_3                       
02AE   1486           01041                         BSF PORTB,ACT_REN2;     //Desactiva el reglon 2 del teclado matricial
02AF   0000           01042                         NOP;                                    //No operacion,para activar/desactivar d
                            os bits consecutivamnete se requiere un nop entre ellos
02B0   1106           01043                         BCF     PORTB,ACT_REN3;         //Activa reglon 3 del teclado matricial
02B1   0806           01044                         MOVF PORTB,W;                   //Mueve el contenido del puerto B a el registro 
                            W
02B2   00C0           01045                         MOVWF VAR_TECLADO;              //Mueve el contenido a la variable teclado
02B3   30F0           01046                         MOVLW 0XF0;                             //Enmascaramiento
02B4   05C0           01047                         ANDWF VAR_TECLADO,F;    //Enmascaramiento
02B5   30F0           01048                         MOVLW NO_HAYTECLA;              //mueve la variable no hay tecla a W
02B6   0240           01049                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - Ni hay tecla(F0), almacena
                             en W
02B7   1903           01050                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02B8   2AC9           01051                         GOTO RENGLON_4;                 //Ve a barrer el reglon 2
                      01052                 
02B9   30E0           01053                         MOVLW TEC_1;                    //Mueve la constante tecla 1 a W
02BA   0240           01054                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - tecla 1, almacena en W
02BB   1903           01055                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02BC   2AE9           01056                         GOTO FUE_TEC1;                  //Ve aconvertir a ASCII la tecla 1
                      01057                 
02BD   30D0           01058                         MOVLW TEC_2;                    //Mueve la constante tecla 2 a W
02BE   0240           01059                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - tecla 2, almacena en W
02BF   1903           01060                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02C0   2AEC           01061                         GOTO FUE_TEC2;                  //Ve aconvertir a ASCII la tecla 2
                      01062 
02C1   30B0           01063                         MOVLW TEC_3;                    //Mueve la constante tecla 3 a W
02C2   0240           01064                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - tecla 3, almacena en W
02C3   1903           01065                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02C4   2AEF           01066                         GOTO FUE_TEC3;                  //Ve aconvertir a ASCII la tecla 3
                      01067 
02C5   3070           01068                         MOVLW TEC_C;                    //Mueve la constante tecla C a W
02C6   0240           01069                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - tecla 3, almacena en W
02C7   1903           01070                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02C8   2B0A           01071                         GOTO FUE_TECC;                  //Ve aconvertir a ASCII la tecla C
                      01072 
                      01073 
                      01074 ;-------------------------------------------------------------------------------------------------------
                            ---
02C9   1506           01075 RENGLON_4       BSF PORTB,ACT_REN3;     //Desactiva el reglon 3 del teclado matricial
02CA   0000           01076                         NOP;                                    //No operacion,para activar/desactivar d
                            os bits consecutivamnete se requiere un nop entre ellos
02CB   1186           01077                         BCF     PORTB,ACT_REN4;         //Activa reglon 4 del teclado matricial
02CC   0806           01078                         MOVF PORTB,W;                   //Mueve el contenido del puerto B a el registro 
                            W
02CD   00C0           01079                         MOVWF VAR_TECLADO;              //Mueve el contenido a la variable teclado
02CE   30F0           01080                         MOVLW 0XF0;                             //Enmascaramiento
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02CF   05C0           01081                         ANDWF VAR_TECLADO,F;    //Enmascaramiento
02D0   30F0           01082                         MOVLW NO_HAYTECLA;              //mueve la variable no hay tecla a W
02D1   0240           01083                         SUBWF VAR_TECLADO,W;    //Resta la variable teclado - Ni hay tecla(F0), almacena
                             en W
02D2   1903           01084                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02D3   2A78           01085                         GOTO BARRE_TECLADO;             //Ve a barrer el reglon 1
                      01086                 
02D4   30E0           01087                         MOVLW TEC_CLEAR;                //Mueve la constante tecla asterisco a W
02D5   0640           01088                         XORWF VAR_TECLADO,W;    //Resta la variable teclado - tecla asterisco, almacena 
                            en W
02D6   1903           01089                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02D7   2B13           01090                         GOTO FUE_TECCLEAR;              //Ve aconvertir a ASCII la tecla asterisco
                      01091                 
02D8   30D0           01092                         MOVLW TEC_0;                    //Mueve la constante tecla 0 a W
02D9   0640           01093                         XORWF VAR_TECLADO,W;    //Resta la variable teclado - tecla 0, almacena en W
02DA   1903           01094                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02DB   2AE6           01095                         GOTO FUE_TEC0;                  //Ve aconvertir a ASCII la tecla 0
                      01096 
02DC   30B0           01097                         MOVLW TEC_GATO;                 //Mueve la constante tecla gato a W
02DD   0640           01098                         XORWF VAR_TECLADO,W;    //Resta la variable teclado - tecla gato, almacena en W
02DE   1903           01099                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02DF   2B10           01100                         GOTO FUE_TECGATO;               //Ve aconvertir a ASCII la tecla gato
                      01101 
02E0   3070           01102                         MOVLW TEC_D;                    //Mueve la constante tecla D a W
02E1   0640           01103                         XORWF VAR_TECLADO,W;    //Resta la variable teclado -tecla D, almacena en W
02E2   1903           01104                         BTFSC STATUS,Z;                 //Revisa el estado de la bandera Z si es 0 salta
02E3   2B0D           01105                         GOTO FUE_TECD;                  //Ve aconvertir a ASCII la tecla D
02E4   24A4           01106                         CALL RETARDO_40MS;
02E5   2A78           01107                         GOTO BARRE_TECLADO;
                      01108 
02E6   3000           01109 FUE_TEC0        MOVLW 0X00;                             //Mueve la constante 0 en ASCII a w
02E7   00C1           01110                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
02E8   2B16           01111                         GOTO SAL_BARRETECLADO;  //Sal de la subrutina barre teclado
02E9   3001           01112 FUE_TEC1        MOVLW 0X01;                             //Mueve la constante 1 en ASCII a w
02EA   00C1           01113                         MOVWF VAR_TECOPRI;              //Mueve el contenido de w a la variable Var_teco
                            pri
02EB   2B16           01114                         GOTO SAL_BARRETECLADO;  //Sal de la subrutina barre teclado
02EC   3002           01115 FUE_TEC2        MOVLW 0X02;                             //Mueve la constante 2 en ASCII a w
02ED   00C1           01116                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
02EE   2B16           01117                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
02EF   3003           01118 FUE_TEC3        MOVLW 0X03;                             //Mueve la constante 3 en ASCII a w
02F0   00C1           01119                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
02F1   2B16           01120                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
02F2   3004           01121 FUE_TEC4        MOVLW 0X04;                             //Mueve la constante 4 en ASCII a w
02F3   00C1           01122                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
02F4   2B16           01123                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
02F5   3005           01124 FUE_TEC5        MOVLW 0X05;                             //Mueve la constante 5 en ASCII a w
02F6   00C1           01125                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F7   2B16           01126                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
02F8   3006           01127 FUE_TEC6        MOVLW 0X06;                             //Mueve la constante 6 en ASCII a w
02F9   00C1           01128                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
02FA   2B16           01129                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
02FB   3007           01130 FUE_TEC7        MOVLW 0X07;                             //Mueve la constante 7 en ASCII a w
02FC   00C1           01131                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
02FD   2B16           01132                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
02FE   3008           01133 FUE_TEC8        MOVLW 0X08;                             //Mueve la constante 8 en ASCII a w
02FF   00C1           01134                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
0300   2B16           01135                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
0301   3009           01136 FUE_TEC9        MOVLW 0X09;                             //Mueve la constante 9 en ASCII a w
0302   00C1           01137                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
0303   2B16           01138                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
0304   300A           01139 FUE_TECA        MOVLW 0X0A;                             //Mueve la constante A en ASCII a w
0305   00C1           01140                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
0306   2B16           01141                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
0307   300B           01142 FUE_TECB        MOVLW 0X0B;                             //Mueve la constante B en ASCII a w
0308   00C1           01143                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
0309   2B16           01144                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
030A   300C           01145 FUE_TECC                MOVLW 0X0C;                             //Mueve la constante C en ASCII a w     
030B   00C1           01146                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
030C   2B16           01147                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
030D   300D           01148 FUE_TECD        MOVLW 0X0D;                             //Mueve la constante D en ASCII a w
030E   00C1           01149                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
030F   2B16           01150                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
0310   300E           01151 FUE_TECGATO     MOVLW 0X0E;                             //Mueve la constante # en ASCII a w
0311   00C1           01152                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
0312   2B16           01153                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
0313                  01154 FUE_TECCLEAR    
0313   300F           01155                         MOVLW 0X0F;                             //Mueve la constante # en ASCII a w
0314   00C1           01156                         MOVWF VAR_TECOPRI;              //Mueve elcontenido de w a la variable Var_tecop
                            ri
0315   2B16           01157                         GOTO SAL_BARRETECLADO;  //Sal de la subruitan barre teclado
                      01158                 
0316   0008           01159 SAL_BARRETECLADO RETURN;                        //Sal de la subrutina de barrido de teclado
                      01160 ;-------------------------------------------------------------------------------------------------------
                            ---
                      01161 
                      01162         ;================================================
                      01163         ;   ==Subrutina de inicializacion en el LCD ==
                      01164         ;================================================
                      01165 
0317   1085           01166 INI_LCD         BCF PORTA,RS_LCD;               //Pone en modo comando al LCD
                      01167                         
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0318   3038           01168                         MOVLW 0X38;                             //selecciona el modo de bus, formato de 
                            vizualizacion y lineas de vizualizacion
0319   0087           01169                         MOVWF PORTC;                    //Mover el contenido del registro de trabajo al 
                            registro portc
031A   2499           01170                         CALL PULSO_ENABLE;              //Llamada a la subrutina de Pulso Enable
031B   300C           01171                         MOVLW 0X0C;                     //activa el cursor y configura el parpadeo del c
                            ursor
031C   0087           01172                         MOVWF PORTC;                    //Mover el contenido del registro de trabajo al 
                            registro portc
031D   2499           01173                         CALL PULSO_ENABLE;              //Llamada a la subrutina de Pulso Enable
031E   3001           01174                         MOVLW 0X01;                             //Borra el texto y dirige el cursor al p
                            rimer dígito
031F   0087           01175                         MOVWF PORTC;                    //Mover el contenido del registro de trabajo al 
                            registro portc
0320   2499           01176                         CALL PULSO_ENABLE;              //Llamada a la subrutina de Pulso Enable
0321   3080           01177                         MOVLW 0X80;                             //Coloca el cursor en el primer dígito
0322   0087           01178                         MOVWF PORTC;                    //Mover el contenido del registro de trabajo al 
                            registro portc
0323   2499           01179                         CALL PULSO_ENABLE;              //Llamada a la subrutina de Pulso Enable
                      01180                         
0324   1485           01181                         BSF PORTA,RS_LCD;               //Pone en modo datos al LCD
0325   0008           01182                         RETURN;                                 //regresa de la subrutina 
                      01183 ;-------------------------------------------------------------------------------------------------------
                            ---
0326                  01184 CONVHEX_ASCII
0326   3000           01185                         MOVLW .0;                       //Fija en w la constante a comparar con temporal
0327   0239           01186                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
0328   1903           01187                         BTFSC STATUS,Z;         //Verifica que Z no sea 0 si lo es ve a convertir a ASCI
                            I de lo contrario revisa el siguiente valor
0329   2B67           01188                         GOTO FUE_0;                     //Cambia 0x00 a 0 en ASCII para mostrarlo en la 
                            LCD     
032A   3001           01189                         MOVLW .1;                       //Fija en w la constante a comparar con temporal
032B   0239           01190                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
032C   1903           01191                         BTFSC STATUS,Z;         //Verifica que Z no sea 1 si lo es ve a convertir a ASCI
                            I de lo contrario revisa el siguiente valor
032D   2B6A           01192                         GOTO FUE_1;                     //Cambia 0x01 a 1 en ASCII para mostrarlo en la 
                            LCD     
032E   3002           01193                         MOVLW .2;                       //Fija en w la constante a comparar con temporal
032F   0239           01194                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
0330   1903           01195                         BTFSC STATUS,Z;         //Verifica que Z no sea 2 si lo es ve a convertir a ASCI
                            I de lo contrario revisa el siguiente valor
0331   2B6D           01196                         GOTO FUE_2;                     //Cambia 0x02 a 2 en ASCII para mostrarlo en la 
                            LCD     
0332   3003           01197                         MOVLW .3;                       //Fija en w la constante a comparar con temporal
0333   0239           01198                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
0334   1903           01199                         BTFSC STATUS,Z;         //Verifica que Z no sea 3 si lo es ve a convertir a ASCI
                            I de lo contrario revisa el siguiente valor
0335   2B70           01200                         GOTO FUE_3;                     //Cambia 0x03 a 3 en ASCII para mostrarlo en la 
                            LCD     
0336   3004           01201                         MOVLW .4;                       //Fija en w la constante a comparar con temporal
0337   0239           01202                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
0338   1903           01203                         BTFSC STATUS,Z;         //Verifica que Z no sea 4 si lo es ve a convertir a ASCI
                            I de lo contrario revisa el siguiente valor
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0339   2B73           01204                         GOTO FUE_4;                     //Cambia 0x04 a 4 en ASCII para mostrarlo en la 
                            LCD     
033A   3005           01205                         MOVLW .5;                       //Fija en w la constante a comparar con temporal
033B   0239           01206                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
033C   1903           01207                         BTFSC STATUS,Z;         //Verifica que Z no sea 5 si lo es ve a convertir a ASCI
                            I de lo contrario revisa el siguiente valor
033D   2B76           01208                         GOTO FUE_5;                     //Cambia 0x05 a 5 en ASCII para mostrarlo en la 
                            LCD     
033E   3006           01209                         MOVLW .6;                       //Fija en w la constante a comparar con temporal
033F   0239           01210                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
0340   1903           01211                         BTFSC STATUS,Z;         //Verifica que Z no sea 6 si lo es ve a convertir a ASCI
                            I de lo contrario revisa el siguiente valor
0341   2B79           01212                         GOTO FUE_6;                     //Cambia 0x06 a 6 en ASCII para mostrarlo en la 
                            LCD     
0342   3007           01213                         MOVLW .7;                       //Fija en w la constante a comparar con temporal
0343   0239           01214                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
0344   1903           01215                         BTFSC STATUS,Z;         //Verifica que Z no sea 7 si lo es ve a convertir a ASCI
                            I de lo contrario revisa el siguiente valor
0345   2B7C           01216                         GOTO FUE_7;                     //Cambia 0x07 a 7 en ASCII para mostrarlo en la 
                            LCD     
0346   3008           01217                         MOVLW .8;                       //Fija en w la constante a comparar con temporal
0347   0239           01218                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
0348   1903           01219                         BTFSC STATUS,Z;         //Verifica que Z no sea 8 si lo es ve a convertir a ASCI
                            I de lo contrario revisa el siguiente valor
0349   2B7F           01220                         GOTO FUE_8;                     //Cambia 0x08 a 8 en ASCII para mostrarlo en la 
                            LCD     
034A   3009           01221                         MOVLW .9;                       //Fija en w la constante a comparar con temporal
034B   0239           01222                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
034C   1903           01223                         BTFSC STATUS,Z;         //Verifica que Z no sea 9 si lo es ve a convertir a ASCI
                            I de lo contrario revisa el siguiente valor
034D   2B82           01224                         GOTO FUE_9;                     //Cambia 0x09 a 9 en ASCII para mostrarlo en la 
                            LCD     
034E   300A           01225                         MOVLW .10;                      //Fija en w la constante a comparar con temporal
034F   0239           01226                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
0350   1903           01227                         BTFSC STATUS,Z;         //Verifica que Z no sea 10 si lo es ve a convertir a ASC
                            II de lo contrario revisa el siguiente valor
0351   2B85           01228                         GOTO FUE_A;                     //Cambia 0x0A a A en ASCII para mostrarlo en la 
                            LCD     
0352   300B           01229                         MOVLW .11;                      //Fija en w la constante a comparar con temporal
0353   0239           01230                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
0354   1903           01231                         BTFSC STATUS,Z;         //Verifica que Z no sea 11 si lo es ve a convertir a ASC
                            II de lo contrario revisa el siguiente valor
0355   2B88           01232                         GOTO FUE_B;                     //Cambia 0x0B a B en ASCII para mostrarlo en la 
                            LCD     
0356   300C           01233                         MOVLW .12;                      //Fija en w la constante a comparar con temporal
0357   0239           01234                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
0358   1903           01235                         BTFSC STATUS,Z;         //Verifica que Z no sea 12 si lo es ve a convertir a ASC
                            II de lo contrario revisa el siguiente valor
0359   2B8B           01236                         GOTO FUE_C;                     //Cambia 0x0C a C en ASCII para mostrarlo en la 
                            LCD     
035A   300D           01237                         MOVLW .13;                      //Fija en w la constante a comparar con temporal
035B   0239           01238                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
035C   1903           01239                         BTFSC STATUS,Z;         //Verifica que Z no sea 13 si lo es ve a convertir a ASC
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            II de lo contrario revisa el siguiente valor
035D   2B8E           01240                         GOTO FUE_D;                     //Cambia 0x0D a D en ASCII para mostrarlo en la 
                            LCD     
035E   300E           01241                         MOVLW .14;                      //Fija en w la constante a comparar con temporal
035F   0239           01242                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
0360   1903           01243                         BTFSC STATUS,Z;         //Verifica que Z no sea 14 si lo es ve a convertir a ASC
                            II de lo contrario revisa el siguiente valor
0361   2B91           01244                         GOTO FUE_E;                     //Cambia 0x0E a E en ASCII para mostrarlo en la 
                            LCD     
0362   300F           01245                         MOVLW .15;                      //Fija en w la constante a comparar con temporal
0363   0239           01246                         SUBWF TEMPORAL,W;       //Compara la variable temporal con w mediante una resta
0364   1903           01247                         BTFSC STATUS,Z;         //Verifica que Z no sea 15 si lo es ve a convertir a ASC
                            II de lo contrario revisa el siguiente valor
0365   2B94           01248                         GOTO FUE_F;                     //Cambia 0x0F a F en ASCII para mostrarlo en la 
                            LCD     
0366   2B96           01249                         GOTO SAL_CONVHEX_ASCII; //Sal de la subruitna de convertir hexadecimal a ASCII
                      01250 
                      01251 
0367   3030           01252 FUE_0           MOVLW '0';                      //Coloca el valor ASCII 0
0368   00B9           01253                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
0369   2B96           01254                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCII
036A   3031           01255 FUE_1           MOVLW '1';                      //Coloca el valor ASCII 1
036B   00B9           01256                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
036C   2B96           01257                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCII
036D   3032           01258 FUE_2           MOVLW '2';                      //Coloca el valor ASCII 2
036E   00B9           01259                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
036F   2B96           01260                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCII
0370   3033           01261 FUE_3           MOVLW '3';                      //Coloca el valor ASCII 3
0371   00B9           01262                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
0372   2B96           01263                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCII   
0373   3034           01264 FUE_4           MOVLW '4';                      //Coloca el valor ASCII 4
0374   00B9           01265                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
0375   2B96           01266                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCII
0376   3035           01267 FUE_5           MOVLW '5';                      //Coloca el valor ASCII 5
0377   00B9           01268                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
0378   2B96           01269                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCII
0379   3036           01270 FUE_6           MOVLW '6';                      //Coloca el valor ASCII 6
037A   00B9           01271                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
037B   2B96           01272                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCII
037C   3037           01273 FUE_7           MOVLW '7';                      //Coloca el valor ASCII 7
037D   00B9           01274                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
037E   2B96           01275                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCII
037F   3038           01276 FUE_8           MOVLW '8';                      //Coloca el valor ASCII 8
0380   00B9           01277                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
0381   2B96           01278                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCII
0382   3039           01279 FUE_9           MOVLW '9';                      //Coloca el valor ASCII 9
0383   00B9           01280                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
0384   2B96           01281                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCII
0385   3041           01282 FUE_A           MOVLW 'A';                      //Coloca el valor ASCII A
0386   00B9           01283                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
0387   2B96           01284                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCII
0388   3042           01285 FUE_B           MOVLW 'B';                      //Coloca el valor ASCII B
0389   00B9           01286                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

038A   2B96           01287                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCII
038B   3043           01288 FUE_C           MOVLW 'C';                      //Coloca el valor ASCII C
038C   00B9           01289                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
038D   2B96           01290                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCII
038E   3044           01291 FUE_D           MOVLW 'D';                      //Coloca el valor ASCII D
038F   00B9           01292                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
0390   2B96           01293                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCI
0391   3045           01294 FUE_E           MOVLW 'E';                      //Coloca el valor ASCII E
0392   00B9           01295                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
0393   2B96           01296                         GOTO SAL_CONVHEX_ASCII;//Sal de la subruitna de convertir hexadecimal a ASCI
0394   3046           01297 FUE_F           MOVLW 'F';                      //Coloca el valor ASCII F
0395   00B9           01298                         MOVWF TEMPORAL;         //en el registro temporal que se mostrara en el LCD
                      01299 
0396                  01300 SAL_CONVHEX_ASCII
0396   0008           01301                         RETURN;
                      01302 
                      01303 
                      01304 ;-------------------------------------------------------------------------------------------------------
                            --
0397                  01305 MUESTRA_CARACTER
0397   1085           01306                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
0398   3080           01307                                 MOVLW 0X80;                                     //Comando de apuntador e
                            n el LCD digito 1
0399   0087           01308                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
039A   2499           01309                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
039B   1485           01310                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
039C   0844           01311                                 MOVF BUFFER0,W;                         //Mover la constante del buffer 
                            0 a W                   
039D   0087           01312                                 MOVWF PORTC;                            //Mover la constante al puerto C
039E   2499           01313                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01314 
039F   1085           01315                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
03A0   3081           01316                                 MOVLW 0X81;                                     //Comando de apuntador e
                            n el LCD digito 2
03A1   0087           01317                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
03A2   2499           01318                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
03A3   1485           01319                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
03A4   0845           01320                                 MOVF BUFFER1,W;                         //Mover la constante del buffer 
                            1 a W
03A5   0087           01321                                 MOVWF PORTC;                            //Mover la constante al puerto C
03A6   2499           01322                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01323 
03A7   1085           01324                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
03A8   3082           01325                                 MOVLW 0X82;                                     //Comando de apuntador e
                            n el LCD digito 3
03A9   0087           01326                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03AA   2499           01327                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
03AB   1485           01328                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
03AC   0846           01329                                 MOVF BUFFER2,W;                         //Mover la constante del buffer 
                            2 a W
03AD   0087           01330                                 MOVWF PORTC;                            //Mover la constante al puerto C
03AE   2499           01331                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01332 
03AF   1085           01333                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
03B0   3083           01334                                 MOVLW 0X83;                                     //Comando de apuntador e
                            n el LCD digito 4
03B1   0087           01335                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
03B2   2499           01336                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
03B3   1485           01337                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
03B4   0847           01338                                 MOVF BUFFER3,W;                         //Mover la constante del buffer 
                            3 a W
03B5   0087           01339                                 MOVWF PORTC;                            //Mover la constante al puerto C
03B6   2499           01340                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01341 
03B7   1085           01342                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
03B8   3084           01343                                 MOVLW 0X84;                                     //Comando de apuntador e
                            n el LCD digito 5
03B9   0087           01344                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
03BA   2499           01345                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
03BB   1485           01346                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
03BC   0848           01347                                 MOVF BUFFER4,W;                         //Mover la constante del buffer 
                            4 a W
03BD   0087           01348                                 MOVWF PORTC;                            //Mover la constante al puerto C
03BE   2499           01349                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01350 
03BF   1085           01351                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
03C0   3085           01352                                 MOVLW 0X85;                                     //Comando de apuntador e
                            n el LCD digito 6
03C1   0087           01353                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
03C2   2499           01354                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
03C3   1485           01355                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
03C4   0849           01356                                 MOVF BUFFER5X,W;                        //Mover la constante del buffer 
                            5 a W
03C5   0087           01357                                 MOVWF PORTC;                            //Mover la constante al puerto C
03C6   2499           01358                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01359 
03C7   1085           01360                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
03C8   3086           01361                                 MOVLW 0X86;                                     //Comando de apuntador e
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            n el LCD digito 7
03C9   0087           01362                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
03CA   2499           01363                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
03CB   1485           01364                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
03CC   0875           01365                                 MOVF BUFFER6X,W;                                //Mover la constante del
                             buffer 6 a W
03CD   0087           01366                                 MOVWF PORTC;                            //Mover la constante al puerto C
03CE   2499           01367                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01368 
03CF   1085           01369                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
03D0   3087           01370                                 MOVLW 0X87;                                     //Comando de apuntador e
                            n el LCD digito 8
03D1   0087           01371                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
03D2   2499           01372                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
03D3   1485           01373                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
03D4   0850           01374                                 MOVF BUFFER7,W;                         //Mover la constante del buffer 
                            7 a W
03D5   0087           01375                                 MOVWF PORTC;                            //Mover la constante al puerto C
03D6   2499           01376                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01377 
03D7   1085           01378                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
03D8   3088           01379                                 MOVLW 0X88;                                     //Comando de apuntador e
                            n el LCD digito 9
03D9   0087           01380                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
03DA   2499           01381                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
03DB   1485           01382                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
03DC   0851           01383                                 MOVF BUFFER8,W;                         //Mover la constante del buffer 
                            8 a W
03DD   0087           01384                                 MOVWF PORTC;                            //Mover la constante al puerto C
03DE   2499           01385                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01386 
03DF   1085           01387                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
03E0   3089           01388                                 MOVLW 0X89;                                     //Comando de apuntador e
                            n el LCD digito 10
03E1   0087           01389                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
03E2   2499           01390                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
03E3   1485           01391                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
03E4   0852           01392                                 MOVF BUFFER9,W;                         //Mover la constante del buffer 
                            9 a W
03E5   0087           01393                                 MOVWF PORTC;                            //Mover la constante al puerto C
03E6   2499           01394                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01395 
03E7   1085           01396                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
03E8   308A           01397                                 MOVLW 0X8A;                                     //Comando de apuntador e
                            n el LCD digito 11
03E9   0087           01398                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
03EA   2499           01399                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
03EB   1485           01400                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
03EC   0853           01401                                 MOVF BUFFERA,W;                         //Mover la constante del buffer 
                            A a W
03ED   0087           01402                                 MOVWF PORTC;                            //Mover la constante al puerto C
03EE   2499           01403                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01404 
03EF   1085           01405                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
03F0   308B           01406                                 MOVLW 0X8B;                                     //Comando de apuntador e
                            n el LCD digito 12
03F1   0087           01407                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
03F2   2499           01408                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
03F3   1485           01409                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
03F4   0854           01410                                 MOVF BUFFERB,W;                         //Mover la constante del buffer 
                            B a W
03F5   0087           01411                                 MOVWF PORTC;                            //Mover la constante al puerto C
03F6   2499           01412                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01413 
03F7   1085           01414                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
03F8   308C           01415                                 MOVLW 0X8C;                                     //Comando de apuntador e
                            n el LCD digito 13
03F9   0087           01416                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
03FA   2499           01417                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
03FB   1485           01418                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
03FC   0855           01419                                 MOVF BUFFERC,W;                         //Mover la constante del buffer 
                            C a W
03FD   0087           01420                                 MOVWF PORTC;                            //Mover la constante al puerto C
03FE   2499           01421                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01422 
03FF   1085           01423                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
0400   308D           01424                                 MOVLW 0X8D;                                     //Comando de apuntador e
                            n el LCD digito 14
0401   0087           01425                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
0402   2499           01426                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
0403   1485           01427                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
0404   0856           01428                                 MOVF BUFFERD,W;                         //Mover la constante del buffer 
                            D a W
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0405   0087           01429                                 MOVWF PORTC;                            //Mover la constante al puerto C
0406   2499           01430                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01431 
0407   1085           01432                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
0408   308E           01433                                 MOVLW 0X8E;                                     //Comando de apuntador e
                            n el LCD digito 15
0409   0087           01434                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
040A   2499           01435                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
040B   1485           01436                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
040C   0857           01437                                 MOVF BUFFERE,W;                         //Mover la constante del buffer 
                            E a W
040D   0087           01438                                 MOVWF PORTC;                            //Mover la constante al puerto C
040E   2499           01439                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
040F   1085           01440                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01441                         
0410   308F           01442                                 MOVLW 0X8F;                                     //Comando de apuntador e
                            n el LCD digito 16
0411   0087           01443                                 MOVWF PORTC;                            //Mover el contenido del registr
                            o de trabajo al registro portc
0412   2499           01444                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
0413   1485           01445                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
0414   0858           01446                                 MOVF BUFFERF,W;                         //Mover la constante del buffer 
                            E a W
0415   0087           01447                                 MOVWF PORTC;                            //Mover la constante al puerto C
0416   2499           01448                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
0417   1085           01449                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01450 
                      01451 
                      01452                         
0418   30C0           01453                                 MOVLW 0XC0;                                     //Comando de apuntador e
                            n el 
0419   0087           01454                                 MOVWF PORTC;                            //en el LCD digito 1 2do reglón
041A   2499           01455                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
041B   1485           01456                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
041C   0859           01457                                 MOVF BUFFER0DO,W;                       //Enviar el contenido de buffer 
                            11                      
041D   0087           01458                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
041E   2499           01459                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
041F   1085           01460                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01461 
0420   30C1           01462                                 MOVLW 0XC1;                                     //Comando de apuntador e
                            n el 
0421   0087           01463                                 MOVWF PORTC;                            //en el LCD digito 2 2do reglón
0422   2499           01464                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             el ingreso de  datos al LCD
0423   1485           01465                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
0424   0860           01466                                 MOVF BUFFER1DO,W;                       //Enviar el contenido de buffer 
                            12                      
0425   0087           01467                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
0426   2499           01468                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
0427   1085           01469                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01470 
0428   30C2           01471                                 MOVLW 0XC2;                                     //Comando de apuntador e
                            n el 
0429   0087           01472                                 MOVWF PORTC;                            //en el LCD digito 3 2do reglón
042A   2499           01473                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
042B   1485           01474                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
042C   0861           01475                                 MOVF BUFFER2DO,W;                       //Enviar el contenido de buffer 
                            13              
042D   0087           01476                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
042E   2499           01477                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01478                         
042F   1085           01479                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
0430   30C3           01480                                 MOVLW 0XC3;                                     //Comando de apuntador e
                            n el 
0431   0087           01481                                 MOVWF PORTC;                            //en el LCD digito 4 2do reglón
0432   2499           01482                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
0433   1485           01483                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
0434   0862           01484                                 MOVF BUFFER3DO,W;                       //Enviar el contenido de buffer 
                            14                      
0435   0087           01485                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
0436   2499           01486                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01487                         
0437   1085           01488                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
0438   30C4           01489                                 MOVLW 0XC4;                                     //Comando de apuntador e
                            n el 
0439   0087           01490                                 MOVWF PORTC;                            //en el LCD digito 5 2do reglón
043A   2499           01491                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
043B   1485           01492                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
043C   0863           01493                                 MOVF BUFFER4DO,W;                       //Enviar el contenido de buffer 
                            15                      
043D   0087           01494                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
043E   2499           01495                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
                      01496                         
043F   1085           01497                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
0440   30C5           01498                                 MOVLW 0XC5;                                     //Comando de apuntador e
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            n el 
0441   0087           01499                                 MOVWF PORTC;                            //en el LCD digito 6 2do reglón
0442   2499           01500                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
0443   1485           01501                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
0444   0864           01502                                 MOVF BUFFER5DO,W;                       //Enviar el contenido de buffer 
                            5DO                     
0445   0087           01503                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
0446   2499           01504                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
0447   1085           01505                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01506 
0448   30C6           01507                                 MOVLW 0XC6;                                     //Comando de apuntador e
                            n el 
0449   0087           01508                                 MOVWF PORTC;                            //en el LCD digito 7 2do reglón
044A   2499           01509                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
044B   1485           01510                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
044C   0865           01511                                 MOVF BUFFER6DO,W;                       //Enviar el contenido de buffer6
                            DO                      
044D   0087           01512                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
044E   2499           01513                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
044F   1085           01514                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01515 
0450   30C7           01516                                 MOVLW 0XC7;                                     //Comando de apuntador e
                            n el 
0451   0087           01517                                 MOVWF PORTC;                            //en el LCD digito 8 2do reglón
0452   2499           01518                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
0453   1485           01519                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
0454   0866           01520                                 MOVF BUFFER7DO,W;                       //Enviar el contenido de buffer7
                            DO                      
0455   0087           01521                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
0456   2499           01522                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
0457   1085           01523                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01524 
0458   30C8           01525                                 MOVLW 0XC8;                                     //Comando de apuntador e
                            n el 
0459   0087           01526                                 MOVWF PORTC;                            //en el LCD digito 9 2do reglón
045A   2499           01527                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
045B   1485           01528                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
045C   0867           01529                                 MOVF BUFFER8DO,W;                       //Enviar el contenido de buffer8
                            DO                      
045D   0087           01530                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
045E   2499           01531                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

045F   1085           01532                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01533 
0460   30C9           01534                                 MOVLW 0XC9;                                     //Comando de apuntador e
                            n el 
0461   0087           01535                                 MOVWF PORTC;                            //en el LCD digito 10 2do reglón
0462   2499           01536                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
0463   1485           01537                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
0464   0868           01538                                 MOVF BUFFER9DO,W;                       //Enviar el contenido de buffer9
                            DO                      
0465   0087           01539                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
0466   2499           01540                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
0467   1085           01541                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01542 
0468   30CA           01543                                 MOVLW 0XCA;                                     //Comando de apuntador e
                            n el 
0469   0087           01544                                 MOVWF PORTC;                            //en el LCD digito 11 2do reglón
046A   2499           01545                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
046B   1485           01546                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
046C   0869           01547                                 MOVF BUFFERADO,W;                       //Enviar el contenido de buffer9
                            DO                      
046D   0087           01548                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
046E   2499           01549                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
046F   1085           01550                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD3
                      01551 
0470   30CB           01552                                 MOVLW 0XCB;                                     //Comando de apuntador e
                            n el 
0471   0087           01553                                 MOVWF PORTC;                            //en el LCD digito 12 2do reglón
0472   2499           01554                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
0473   1485           01555                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
0474   0870           01556                                 MOVF BUFFERBDO,W;                       //Enviar el contenido de bufferB
                            DO                      
0475   0087           01557                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
0476   2499           01558                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
0477   1085           01559                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01560 
0478   30CC           01561                                 MOVLW 0XCC;                                     //Comando de apuntador e
                            n el 
0479   0087           01562                                 MOVWF PORTC;                            //en el LCD digito 13 2do reglón
047A   2499           01563                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
047B   1485           01564                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
047C   0871           01565                                 MOVF BUFFERCDO,W;                       //Enviar el contenido de bufferC
                            DO                      
047D   0087           01566                                 MOVWF PORTC;                            //al bus de datos/comandos con l
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            a LCD
047E   2499           01567                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
047F   1085           01568                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01569 
0480   30CD           01570                                 MOVLW 0XCD;                                     //Comando de apuntador e
                            n el 
0481   0087           01571                                 MOVWF PORTC;                            //en el LCD digito 14 2do reglón
0482   2499           01572                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
0483   1485           01573                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
0484   0872           01574                                 MOVF BUFFERDDO,W;                       //Enviar el contenido de bufferD
                            DO                      
0485   0087           01575                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
0486   2499           01576                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
0487   1085           01577                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01578 
0488   30CE           01579                                 MOVLW 0XCE;                                     //Comando de apuntador e
                            n el 
0489   0087           01580                                 MOVWF PORTC;                            //en el LCD digito 15 2do reglón
048A   2499           01581                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
048B   1485           01582                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
048C   0873           01583                                 MOVF BUFFEREDO,W;                       //Enviar el contenido de bufferE
                            DO                      
048D   0087           01584                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
048E   2499           01585                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
048F   1085           01586                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01587 
0490   30CF           01588                                 MOVLW 0XCF;                                     //Comando de apuntador e
                            n el 
0491   0087           01589                                 MOVWF PORTC;                            //en el LCD digito 16 2do reglón
0492   2499           01590                                 CALL PULSO_ENABLE;                      //Subrutina de pulso que permite
                             el ingreso de  datos al LCD
0493   1485           01591                                 BSF PORTA,RS_LCD;                       //Pone en modo datos al LCD
0494   0874           01592                                 MOVF BUFFERFDO,W;                       //Enviar el contenido de bufferF
                            DO                      
0495   0087           01593                                 MOVWF PORTC;                            //al bus de datos/comandos con l
                            a LCD
0496   2499           01594                                 CALL PULSO_ENABLE;                      //Llamada a la subrutina de Puls
                            o Enable
0497   1085           01595                                 BCF PORTA,RS_LCD;                       //Pone en modo comando al LCD
                      01596 
                      01597                 
                      01598 
0498   0008           01599                                 RETURN;                                         //Regreso al programa pr
                            incipal
                      01600 ;-------------------------------------------------------------------------------------------------------
                            ---
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01601 
                      01602 
                      01603 
                      01604                                 ;==============================
                      01605                                 ;       ==Subrutina Pulso Enable=
                      01606                                 ;==============================
                      01607 
0499   1005           01608 PULSO_ENABLE    BCF PORTA,ENABLE_LCD;   //Pon a 0 el bit Enable_LCD del registro porta
049A   249E           01609                                 CALL RETARDO_1MS;               //Llamada a la subrutina de retardo de 1
                            ms
049B   1405           01610                                 BSF PORTA,ENABLE_LCD;   //Pon a 1 el bit Enable_LCD del registro porta
049C   24A4           01611                                 CALL RETARDO_40MS;      //Llamada a la subrutina de retardo de 40ms
049D   0008           01612                                 RETURN;
                      01613 ;-------------------------------------------------------------------------------------------------------
                            ---
                      01614 
                      01615 
                      01616                                 ;==============================
                      01617                                 ;==Subrutina de retardo de 1ms=
                      01618                                 ;==============================
                      01619 
049E   01B6           01620 RETARDO_1MS     CLRF CONT_MILIS;                //Limpia el registro cont milis         
049F   3001           01621 LOOP_1MS                MOVLW .1;                               //Mueve la constante 1 al registro de tr
                            abajo 
04A0   0236           01622                                 SUBWF CONT_MILIS,W;             //Resta entre el registro cont milis men
                            os el registro de trabajo
04A1   1D03           01623                                 BTFSS STATUS,Z;                 //Si el bit Z del registro STATUS es igu
                            al a 1 salta
04A2   2C9F           01624                                 GOTO LOOP_1MS;                  //Ve para la etiqueta loop_1ms
                      01625                         
04A3   0008           01626                                 RETURN;                                 //regresa de la subrutina
                      01627 ;-------------------------------------------------------------------------------------------------------
                            ---
                      01628 
                      01629                                 ;==============================
                      01630                                 ;==Subrutina de retardo de 6ms=
                      01631                                 ;==============================
                      01632 
04A4   01B6           01633 RETARDO_40MS    CLRF CONT_MILIS;                //Limpia el registro cont milis 
04A5   3028           01634 LOOP_40MS               MOVLW .40;                              //Mueve la constante 40 al registro de t
                            rabajo 
04A6   0236           01635                                 SUBWF CONT_MILIS,W;             //Resta entre el registro cont milis men
                            os el registro de trabajo
04A7   1D03           01636                                 BTFSS STATUS,Z;                 //Si el bit Z del registro STATUS si es 
                            igual a 1 salta de lo contrario ejecuta normalmente
04A8   2CA5           01637                                 GOTO LOOP_40MS;                 //Ve para la etiqueta loop_40ms
                      01638                         
04A9   0008           01639                                 RETURN;                                 //regresa de la subrutina
                      01640 
                      01641 
                      01642 ;-------------------------------------------------------------------------------------------------------
                            ---
                      01643 
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01644                                 ;==============================
                      01645                                 ;==Subrutina de retardo de 2ms=
                      01646                                 ;==============================
                      01647 
04AA   01B6           01648 ESPERA_2MS              CLRF CONT_MILIS;                //Limpia el registro cont milis 
04AB   3002           01649 LOOP_2M                 MOVLW .2;                               //Mueve la constante 2 al registro de tr
                            abajo 
04AC   0236           01650                                 SUBWF CONT_MILIS,W;             //Resta entre el registro cont milis men
                            os el registro de trabajo
04AD   1D03           01651                                 BTFSS STATUS,Z;                 //Si el bit Z del registro STATUS si es 
                            igual a 1 salta de lo contrario ejecuta normalmente
04AE   2CAB           01652                                 GOTO LOOP_2M;                   //Ve para la etiqueta loop_2ms
                      01653                         
04AF   0008           01654                                 RETURN;                                 //regresa de la subrutina
                      01655 
                      01656 ;-------------------------------------------------------------------------------------------------------
                            ---
                      01657 
                      01658                                 ;==============================
                      01659                                 ;==Subrutina de retardo de 41ms=
                      01660                                 ;==============================
                      01661 
04B0   01B6           01662 RETARDO_250MS   CLRF CONT_MILIS;                        //Limpia el registro cont milis 
04B1   30FA           01663 LOOP_250                MOVLW .250;                             //Mueve la constante 41 al registro de t
                            rabajo 
04B2   0236           01664                                 SUBWF CONT_MILIS,W;             //Resta entre el registro cont milis men
                            os el registro de trabajo
04B3   1D03           01665                                 BTFSS STATUS,Z;                 //Si el bit Z del registro STATUS si es 
                            igual a 1 salta de lo contrario ejecuta normalmente
04B4   2CB1           01666                                 GOTO LOOP_250;                  //Ve para la etiqueta loop_41ms
                      01667                         
04B5   0008           01668                                 RETURN;                                 //regresa de la subrutina
                      01669 
                      01670 ;-------------------------------------------------------------------------------------------------------
                            ---
                      01671 
                      01672                                 ;==============================
                      01673                                 ;==Subrutina de retardo de 4ms=
                      01674                                 ;==============================
                      01675 
04B6   01B6           01676 ESPERA_4MS              CLRF CONT_MILIS;                //Limpia el registro cont milis 
04B7   3004           01677 LOOP_4                  MOVLW .4;                               //Mueve la constante 4 al registro de tr
                            abajo 
04B8   0236           01678                                 SUBWF CONT_MILIS,W;             //Resta entre el registro cont milis men
                            os el registro de trabajo
04B9   1D03           01679                                 BTFSS STATUS,Z;                 //Si el bit Z del registro STATUS si es 
                            igual a 1 salta de lo contrario ejecuta normalmente
04BA   2CB7           01680                                 GOTO LOOP_4;                    //Ve para la etiqueta loop_4
                      01681                         
04BB   0008           01682                                 RETURN;                                 //regresa de la subrutina
                      01683 
                      01684 ;-------------------------------------------------------------------------------------------------------
                            ---
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01685                                 ;==============================
                      01686                                 ;==Subrutina de retardo de 5s=
                      01687                                 ;==============================
                      01688 
04BC                  01689 ESPERA_5S
                      01690 
                      01691 
                      01692 
04BC   01B6           01693 LOOPSEG                 CLRF CONT_MILIS;                //Limpia el registro cont milis
Message[305]: Using default destination of 1 (file).
04BD   0AF9           01694                                 INCF REG5S;     
04BE   30FA           01695 LOOP_INT                        MOVLW .250;                             //Mueve la constante 250 al regi
                            stro de trabajo 
04BF   0236           01696                                 SUBWF CONT_MILIS,W;             //Resta entre el registro cont milis men
                            os el registro de trabajo
04C0   1D03           01697                                 BTFSS STATUS,Z;                 //Si el bit Z del registro STATUS si es 
                            igual a 1 salta de lo contrario ejecuta normalmente
04C1   2CBE           01698                                 GOTO LOOP_INT;                  //Ve para la etiqueta loop250
                      01699                                 
04C2   3009           01700                                 MOVLW .9;                               //Mueve la constante 250 al regi
                            stro de trabajo
04C3   0200           01701                                 SUBWF ,W;                               //Resta entre el registro cont m
                            ilis menos el registro de trabajo
04C4   1D03           01702                                 BTFSS STATUS,Z;                 //Si el bit Z del registro STATUS si es 
                            igual a 1 salta de lo contrario ejecuta normalmente
04C5   2CBC           01703                                 GOTO LOOPSEG;                   //Ve para la etiqueta loop250
                      01704 
04C6   0008           01705                                 RETURN;                                 //regresa de la subrutina
                      01706 
                      01707 ;-------------------------------------------------------------------------------------------------------
                            ---
                      01708 
                      01709 
                      01710 
                      01711 
                      01712 
                      01713 
                      01714 
Warning[205]: Found directive in column 1. (END)
Warning[211]: Extraneous arguments on the line.
                      01715 END                                                                             //FIN DEL PROGRAMA
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACT_REN1                          00000000
ACT_REN2                          00000001
ACT_REN3                          00000002
ACT_REN4                          00000003
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AUXNIBBLE_ALTO                    00000077
AUXNIBBLE_BAJO                    00000076
AUXPORTE                          00000078
BANDERAS                          00000035
BANDERA_CLEAR                     00000003
BANDERA_D                         00000001
BANDERA_TECLADO                   00000002
BAN_INT                           00000000
BARRE_TECLADO                     00000278
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
BUFFER0                           00000044
BUFFER0DO                         00000059
BUFFER1                           00000045
BUFFER1DO                         00000060
BUFFER2                           00000046
BUFFER2DO                         00000061
BUFFER3                           00000047
BUFFER3DO                         00000062
BUFFER4                           00000048
BUFFER4DO                         00000063
BUFFER5DO                         00000064
BUFFER5X                          00000049
BUFFER6DO                         00000065
BUFFER6X                          00000075
BUFFER7                           00000050
BUFFER7DO                         00000066
BUFFER8                           00000051
BUFFER8DO                         00000067
BUFFER9                           00000052
BUFFER9DO                         00000068
BUFFERA                           00000053
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

BUFFERADO                         00000069
BUFFERB                           00000054
BUFFERBDO                         00000070
BUFFERC                           00000055
BUFFERCDO                         00000071
BUFFERD                           00000056
BUFFERDDO                         00000072
BUFFERE                           00000057
BUFFEREDO                         00000073
BUFFERF                           00000058
BUFFERFDO                         00000074
BUS_DIRA0                         00000000
BUS_DIRA1                         00000001
BUS_DIRA10                        00000000
BUS_DIRA2                         00000002
BUS_DIRA3                         00000003
BUS_DIRA4                         00000004
BUS_DIRA5                         00000005
BUS_DIRA6                         00000006
BUS_DIRA7                         00000007
BUS_DIRA8                         00000002
BUS_DIRA9                         00000001
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CE_RAM                            00000005
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
COL_1                             00000004
COL_2                             00000005
COL_3                             00000006
COL_4                             00000007
CONT_MILIS                        00000036
CONVHEX_ASCII                     00000326
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
DATA_ADDRESS                      00000005
DATA_BUSD0                        00000000
DATA_BUSD1                        00000001
DATA_BUSD2                        00000002
DATA_BUSD3                        00000003
DATA_BUSD4                        00000004
DATA_BUSD5                        00000005
DATA_BUSD6                        00000006
DATA_BUSD7                        00000007
DC                                00000001
D_A                               00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ENABLE_LCD                        00000000
ESPERA_2MS                        000004AA
ESPERA_4MS                        000004B6
ESPERA_5S                         000004BC
F                                 00000001
FERR                              00000002
FSR                               00000004
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

FUE_0                             00000367
FUE_1                             0000036A
FUE_2                             0000036D
FUE_3                             00000370
FUE_4                             00000373
FUE_5                             00000376
FUE_6                             00000379
FUE_7                             0000037C
FUE_8                             0000037F
FUE_9                             00000382
FUE_A                             00000385
FUE_B                             00000388
FUE_C                             0000038B
FUE_D                             0000038E
FUE_E                             00000391
FUE_F                             00000394
FUE_TEC0                          000002E6
FUE_TEC1                          000002E9
FUE_TEC1AUX                       000000B8
FUE_TEC2                          000002EC
FUE_TEC2AUX                       00000174
FUE_TEC3                          000002EF
FUE_TEC3AUX                       0000006A
FUE_TEC4                          000002F2
FUE_TEC5                          000002F5
FUE_TEC6                          000002F8
FUE_TEC7                          000002FB
FUE_TEC8                          000002FE
FUE_TEC9                          00000301
FUE_TECA                          00000304
FUE_TECB                          00000307
FUE_TECC                          0000030A
FUE_TECCLEAR                      00000313
FUE_TECD                          0000030D
FUE_TECGATO                       00000310
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INI_LCD                           00000317
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
LED_ROJO                          00000004
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

LOOPSEG                           000004BC
LOOP_1ERA                         00000168
LOOP_1MS                          0000049F
LOOP_250                          000004B1
LOOP_2DA                          00000209
LOOP_2M                           000004AB
LOOP_4                            000004B7
LOOP_40MS                         000004A5
LOOP_INT                          000004BE
MUESTRA_CARACTER                  00000397
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NO_HAYTECLA                       000000F0
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRESC_1                           00000033
PRESC_2                           00000034
PROGA                             00000000
PROGB                             000000F0
PROGC_IN                          000000FF
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

PROGC_OUT                         00000000
PROGD                             00000000
PROGE                             00000000
PROG_INI                          0000002B
PROG_PRIN                         00000068
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PULSO_ENABLE                      00000499
R                                 00000002
RBIE                              00000003
RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD_RAM                            00000003
READ_WRITE                        00000002
REG5S                             00000079
RENGLON_2                         00000293
RENGLON_3                         000002AE
RENGLON_3A                        000000A1
RENGLON_4                         000002C9
RES_FSR                           00000032
RES_PCLATH                        00000031
RES_STATUS                        00000030
RES_W                             00000029
RETARDO_1MS                       0000049E
RETARDO_250MS                     000004B0
RETARDO_40MS                      000004A4
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RS_LCD                            00000001
RUTINA_INT                        00000019
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SAL_BARRETECLADO                  00000316
SAL_CONVHEX_ASCII                 00000396
SAL_INT                           0000000F
SAL_RUTEXT                        00000028
SAL_RUTINT                        00000029
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

SEN                               00000000
SIG_INT                           00000020
SIN_BD4                           00000004
SIN_BD5                           00000005
SIN_BD6                           00000006
SIN_BD7                           00000007
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SWITCH                            000000AC
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEC_0                             000000D0
TEC_1                             000000E0
TEC_2                             000000D0
TEC_3                             000000B0
TEC_4                             000000E0
TEC_5                             000000D0
TEC_6                             000000B0
TEC_7                             000000E0
TEC_8                             000000D0
TEC_9                             000000B0
TEC_A                             00000070
TEC_B                             00000070
TEC_C                             00000070
TEC_CLEAR                         000000E0
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

TEC_D                             00000070
TEC_GATO                          000000B0
TEMPORAL                          00000039
TEMPO_1                           00000043
TEMPO_2                           00000037
TEMPO_3                           00000038
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
TRISD                             00000088
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
VAR_TECBIN                        00000042
VAR_TECLADO                       00000040
VAR_TECOPRI                       00000041
VEC_INT                           00000004
VEC_RESET                         00000000
W                                 00000000
WCOL                              00000007
WE_RAM                            00000002
WR                                00000001
WREN                              00000002
WRERR                             00000003
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001
__DEBUG                           1


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XX--XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.30.01                    PRACTICA 5.ASM   5-25-2021  9:29:10         PAGE 50


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXX--------- ---------------- ---------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:  1221
Program Memory Words Free:  6971


Errors   :     0
Warnings :     4 reported,     0 suppressed
Messages :     1 reported,     0 suppressed

